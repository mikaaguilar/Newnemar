
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;

public class Homepage extends javax.swing.JFrame {
public Connection con;
public PreparedStatement st, st1, st2,sta;
public ResultSet rs, rs1, rs2; 


    public Homepage() {
        initComponents();
        initBranch();
        initEdit();
        setIcon();
        showDate();
        showTime();
        showPC();
        pcSet();

    }

    void showDate() {
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("MM-dd-yyyy");
        datefield.setText(s.format(d));
    }
    
    void showTime() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent a) {
                Date d = new Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss");
                timefield.setText(s.format(d));
            }
        }).start();}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Maincard = new javax.swing.JPanel();
        INVmaincard = new javax.swing.JPanel();
        PC = new javax.swing.JButton();
        CC = new javax.swing.JButton();
        PR = new javax.swing.JButton();
        INVcard = new javax.swing.JPanel();
        PCcard = new javax.swing.JPanel();
        PCinfo = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        compName = new javax.swing.JTextField();
        compBran = new javax.swing.JTextField();
        compDept = new javax.swing.JTextField();
        compProc = new javax.swing.JTextField();
        compRam = new javax.swing.JTextField();
        compHdd = new javax.swing.JTextField();
        compUps = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        pcEdit = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        compRem = new javax.swing.JTextArea();
        pcUpdate = new javax.swing.JButton();
        PCtable = new javax.swing.JScrollPane();
        compTbl = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        pcSearchtxt = new javax.swing.JTextField();
        pcSort = new javax.swing.JComboBox();
        pcSearch = new javax.swing.JLabel();
        PChistable = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        hisTbl = new javax.swing.JTable();
        countHis = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        pcAdd = new javax.swing.JButton();
        pcDel = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        countPC = new javax.swing.JLabel();
        CCcard = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        ccTbl = new javax.swing.JTable();
        jLabel68 = new javax.swing.JLabel();
        ccSearchtxt = new javax.swing.JTextField();
        ccSort = new javax.swing.JComboBox();
        ccSearch = new javax.swing.JLabel();
        jScrollPane18 = new javax.swing.JScrollPane();
        hisTbl2 = new javax.swing.JTable();
        ccAdd = new javax.swing.JButton();
        ccDel = new javax.swing.JButton();
        CCinfo = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        ccSupp = new javax.swing.JTextField();
        ccBran = new javax.swing.JTextField();
        ccUN = new javax.swing.JTextField();
        ccPW = new javax.swing.JTextField();
        ccNum = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        ccEdit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ccRem = new javax.swing.JTextArea();
        ccUpdate = new javax.swing.JButton();
        jLabel70 = new javax.swing.JLabel();
        countHis3 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        countCC = new javax.swing.JLabel();
        PRcard = new javax.swing.JPanel();
        jScrollPane27 = new javax.swing.JScrollPane();
        prTbl = new javax.swing.JTable();
        jLabel86 = new javax.swing.JLabel();
        prSearchtxt = new javax.swing.JTextField();
        prSort = new javax.swing.JComboBox();
        prSearch = new javax.swing.JLabel();
        PRadd = new javax.swing.JButton();
        PRdel = new javax.swing.JButton();
        jLabel88 = new javax.swing.JLabel();
        PRinfo = new javax.swing.JPanel();
        jLabel75 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        prDept = new javax.swing.JTextField();
        prBran = new javax.swing.JTextField();
        prName = new javax.swing.JTextField();
        prManu = new javax.swing.JTextField();
        jLabel82 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        prRem = new javax.swing.JTextArea();
        prEdit = new javax.swing.JButton();
        prUpdate = new javax.swing.JButton();
        jLabel89 = new javax.swing.JLabel();
        countPR = new javax.swing.JLabel();
        PChistable1 = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        hisTbl3 = new javax.swing.JTable();
        countHis2 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        Adding = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        AddPC = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        PCinfo1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        compNameAdd = new javax.swing.JTextField();
        compDeptAdd = new javax.swing.JTextField();
        compProcAdd = new javax.swing.JTextField();
        compRamAdd = new javax.swing.JTextField();
        compHddAdd = new javax.swing.JTextField();
        compUpsAdd = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        pcAddCan = new javax.swing.JButton();
        jScrollPane23 = new javax.swing.JScrollPane();
        compRemAdd = new javax.swing.JTextArea();
        addBranch = new javax.swing.JComboBox<String>();
        jLabel36 = new javax.swing.JLabel();
        pcSave = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        AddCC = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        PCinfo2 = new javax.swing.JPanel();
        ccAddCan = new javax.swing.JButton();
        ccSave = new javax.swing.JButton();
        jLabel69 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        ccSuppAdd = new javax.swing.JTextField();
        jLabel80 = new javax.swing.JLabel();
        ccUNAdd = new javax.swing.JTextField();
        jLabel83 = new javax.swing.JLabel();
        ccPWAdd = new javax.swing.JTextField();
        jLabel84 = new javax.swing.JLabel();
        ccNumAdd = new javax.swing.JTextField();
        jLabel85 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ccRemAdd = new javax.swing.JTextArea();
        addBranch1 = new javax.swing.JComboBox<String>();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        AddPR = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        PCinfo3 = new javax.swing.JPanel();
        prAddCan = new javax.swing.JButton();
        prSave = new javax.swing.JButton();
        jLabel87 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        prDeptAdd = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        prNameAdd = new javax.swing.JTextField();
        jLabel92 = new javax.swing.JLabel();
        prManuAdd = new javax.swing.JTextField();
        jLabel94 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        prRemAdd = new javax.swing.JTextArea();
        addBranch2 = new javax.swing.JComboBox<String>();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        HISmaincard = new javax.swing.JPanel();
        jScrollPane20 = new javax.swing.JScrollPane();
        allHisTbl = new javax.swing.JTable();
        HISrepair = new javax.swing.JButton();
        HISreplace = new javax.swing.JButton();
        HISdispose = new javax.swing.JButton();
        HISsearch = new javax.swing.JLabel();
        HISsearchf = new javax.swing.JTextField();
        HISfilter = new javax.swing.JButton();
        HISdetails = new javax.swing.JPanel();
        HISpc = new javax.swing.JPanel();
        jLabel113 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        pcHisName = new javax.swing.JTextField();
        pcHisBran = new javax.swing.JTextField();
        pcHisPric = new javax.swing.JTextField();
        pcHisAct = new javax.swing.JTextField();
        jLabel121 = new javax.swing.JLabel();
        jLabel122 = new javax.swing.JLabel();
        pcHisPerf = new javax.swing.JTextField();
        jScrollPane21 = new javax.swing.JScrollPane();
        pcHisRem = new javax.swing.JTextArea();
        pcHisSTime = new javax.swing.JTextField();
        pcHisETime = new javax.swing.JTextField();
        pcHisUpdate = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel103 = new javax.swing.JLabel();
        jLabel141 = new javax.swing.JLabel();
        pcHisSDate = new javax.swing.JTextField();
        pcHisEDate = new javax.swing.JTextField();
        HIScc = new javax.swing.JPanel();
        jLabel114 = new javax.swing.JLabel();
        jLabel143 = new javax.swing.JLabel();
        jLabel144 = new javax.swing.JLabel();
        jLabel145 = new javax.swing.JLabel();
        jLabel146 = new javax.swing.JLabel();
        jLabel147 = new javax.swing.JLabel();
        jLabel148 = new javax.swing.JLabel();
        ccHisName = new javax.swing.JTextField();
        ccHisBran = new javax.swing.JTextField();
        ccHisPric = new javax.swing.JTextField();
        ccHisAct = new javax.swing.JTextField();
        jLabel149 = new javax.swing.JLabel();
        jLabel150 = new javax.swing.JLabel();
        ccHisPerf = new javax.swing.JTextField();
        jScrollPane24 = new javax.swing.JScrollPane();
        ccHisRem = new javax.swing.JTextArea();
        ccHisSTime = new javax.swing.JTextField();
        ccHisETime = new javax.swing.JTextField();
        ccHisUpdate = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel112 = new javax.swing.JLabel();
        jLabel151 = new javax.swing.JLabel();
        ccHisSDate = new javax.swing.JTextField();
        ccHisEDate = new javax.swing.JTextField();
        HISpr = new javax.swing.JPanel();
        jLabel152 = new javax.swing.JLabel();
        jLabel153 = new javax.swing.JLabel();
        jLabel154 = new javax.swing.JLabel();
        jLabel155 = new javax.swing.JLabel();
        jLabel156 = new javax.swing.JLabel();
        jLabel157 = new javax.swing.JLabel();
        jLabel158 = new javax.swing.JLabel();
        prHisName = new javax.swing.JTextField();
        prHisBran = new javax.swing.JTextField();
        prHisPric = new javax.swing.JTextField();
        prHisAct = new javax.swing.JTextField();
        jLabel159 = new javax.swing.JLabel();
        jLabel160 = new javax.swing.JLabel();
        prHisPerf = new javax.swing.JTextField();
        jScrollPane26 = new javax.swing.JScrollPane();
        prHisRem = new javax.swing.JTextArea();
        prHisSTime = new javax.swing.JTextField();
        prHisETime = new javax.swing.JTextField();
        prHisUpdate = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel104 = new javax.swing.JLabel();
        jLabel161 = new javax.swing.JLabel();
        prHisSDate = new javax.swing.JTextField();
        prHisEDate = new javax.swing.JTextField();
        HISpc1 = new javax.swing.JPanel();
        jLabel123 = new javax.swing.JLabel();
        jLabel124 = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        jLabel126 = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        jLabel128 = new javax.swing.JLabel();
        jLabel129 = new javax.swing.JLabel();
        pcHisName1 = new javax.swing.JTextField();
        pcHisBran1 = new javax.swing.JTextField();
        pcHisPric1 = new javax.swing.JTextField();
        pcHisAct1 = new javax.swing.JTextField();
        jLabel130 = new javax.swing.JLabel();
        jLabel131 = new javax.swing.JLabel();
        pcHisPerf1 = new javax.swing.JTextField();
        jScrollPane22 = new javax.swing.JScrollPane();
        pcHisRem1 = new javax.swing.JTextArea();
        pcHisSTime1 = new javax.swing.JTextField();
        pcHisETime1 = new javax.swing.JTextField();
        pcHisSDate1 = new com.toedter.calendar.JDateChooser();
        pcHisEDate1 = new com.toedter.calendar.JDateChooser();
        pcHisUpdate1 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel105 = new javax.swing.JLabel();
        jLabel162 = new javax.swing.JLabel();
        pcHisSDate2 = new javax.swing.JTextField();
        pcHisEDate2 = new javax.swing.JTextField();
        HIScc1 = new javax.swing.JPanel();
        jLabel132 = new javax.swing.JLabel();
        jLabel163 = new javax.swing.JLabel();
        jLabel164 = new javax.swing.JLabel();
        jLabel165 = new javax.swing.JLabel();
        jLabel166 = new javax.swing.JLabel();
        jLabel167 = new javax.swing.JLabel();
        jLabel168 = new javax.swing.JLabel();
        ccHisName1 = new javax.swing.JTextField();
        ccHisBran1 = new javax.swing.JTextField();
        ccHisPric1 = new javax.swing.JTextField();
        ccHisAct1 = new javax.swing.JTextField();
        jLabel169 = new javax.swing.JLabel();
        jLabel170 = new javax.swing.JLabel();
        ccHisPerf1 = new javax.swing.JTextField();
        jScrollPane28 = new javax.swing.JScrollPane();
        ccHisRem1 = new javax.swing.JTextArea();
        ccHisSTime1 = new javax.swing.JTextField();
        ccHisETime1 = new javax.swing.JTextField();
        ccHisSDate1 = new com.toedter.calendar.JDateChooser();
        ccHisEDate1 = new com.toedter.calendar.JDateChooser();
        ccHisUpdate1 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel133 = new javax.swing.JLabel();
        jLabel171 = new javax.swing.JLabel();
        ccHisSDate2 = new javax.swing.JTextField();
        ccHisEDate2 = new javax.swing.JTextField();
        HISpr1 = new javax.swing.JPanel();
        jLabel172 = new javax.swing.JLabel();
        jLabel173 = new javax.swing.JLabel();
        jLabel174 = new javax.swing.JLabel();
        jLabel175 = new javax.swing.JLabel();
        jLabel176 = new javax.swing.JLabel();
        jLabel177 = new javax.swing.JLabel();
        jLabel178 = new javax.swing.JLabel();
        prHisName1 = new javax.swing.JTextField();
        prHisBran1 = new javax.swing.JTextField();
        prHisPric1 = new javax.swing.JTextField();
        prHisAct1 = new javax.swing.JTextField();
        jLabel179 = new javax.swing.JLabel();
        jLabel180 = new javax.swing.JLabel();
        prHisPerf1 = new javax.swing.JTextField();
        jScrollPane29 = new javax.swing.JScrollPane();
        prHisRem1 = new javax.swing.JTextArea();
        prHisSTime1 = new javax.swing.JTextField();
        prHisETime1 = new javax.swing.JTextField();
        prHisSDate1 = new com.toedter.calendar.JDateChooser();
        prHisEDate1 = new com.toedter.calendar.JDateChooser();
        prHisUpdate1 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel106 = new javax.swing.JLabel();
        jLabel181 = new javax.swing.JLabel();
        prHisSDate2 = new javax.swing.JTextField();
        prHisEDate2 = new javax.swing.JTextField();
        Filter = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        hisSortCateg = new javax.swing.JComboBox<String>();
        hisSortBran = new javax.swing.JComboBox<String>();
        hisSortSDate = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        hisSortEDate = new com.toedter.calendar.JDateChooser();
        hisHide = new javax.swing.JButton();
        hisGo = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();
        countHis5 = new javax.swing.JLabel();
        AddHistory = new javax.swing.JPanel();
        Add = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        PCinfo4 = new javax.swing.JPanel();
        hisAddCan = new javax.swing.JButton();
        hisSave = new javax.swing.JButton();
        jLabel142 = new javax.swing.JLabel();
        jLabel138 = new javax.swing.JLabel();
        hisETimeAdd = new javax.swing.JTextField();
        hisSDateAdd = new com.toedter.calendar.JDateChooser();
        jLabel136 = new javax.swing.JLabel();
        hisPerfAdd = new javax.swing.JTextField();
        hisActAdd = new javax.swing.JTextField();
        hisPricAdd = new javax.swing.JTextField();
        jLabel135 = new javax.swing.JLabel();
        jLabel139 = new javax.swing.JLabel();
        hisEDateAdd = new com.toedter.calendar.JDateChooser();
        jLabel137 = new javax.swing.JLabel();
        jLabel140 = new javax.swing.JLabel();
        hisSTimeAdd = new javax.swing.JTextField();
        jLabel134 = new javax.swing.JLabel();
        jScrollPane25 = new javax.swing.JScrollPane();
        hisRemAdd = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        INV = new javax.swing.JButton();
        HIS = new javax.swing.JButton();
        LOG = new javax.swing.JButton();
        LOGOUT = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        datefield = new javax.swing.JLabel();
        timefield = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Maincard.setPreferredSize(new java.awt.Dimension(1700, 982));
        Maincard.setLayout(new java.awt.CardLayout());

        INVmaincard.setPreferredSize(new java.awt.Dimension(1700, 982));

        PC.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        PC.setForeground(new java.awt.Color(0, 51, 51));
        PC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pc2.jpg"))); // NOI18N
        PC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PCActionPerformed(evt);
            }
        });

        CC.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        CC.setForeground(new java.awt.Color(0, 51, 51));
        CC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cctv.jpg"))); // NOI18N
        CC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CCActionPerformed(evt);
            }
        });

        PR.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        PR.setForeground(new java.awt.Color(0, 51, 51));
        PR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/printers.jpg"))); // NOI18N
        PR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PRActionPerformed(evt);
            }
        });

        INVcard.setPreferredSize(new java.awt.Dimension(1700, 933));
        INVcard.setLayout(new java.awt.CardLayout());

        PCcard.setBackground(new java.awt.Color(255, 255, 255));
        PCcard.setMaximumSize(new java.awt.Dimension(1700, 933));
        PCcard.setPreferredSize(new java.awt.Dimension(1700, 933));

        PCinfo.setBackground(new java.awt.Color(204, 204, 204));
        PCinfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
        PCinfo.setPreferredSize(new java.awt.Dimension(486, 409));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 51, 51));
        jLabel15.setText("PC Name:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Branch:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 51));
        jLabel20.setText("Processor:");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setText("RAM:");

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(51, 51, 51));
        jLabel32.setText("Hard Drive Size:");

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(51, 51, 51));
        jLabel34.setText("UPS:");

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(51, 51, 51));
        jLabel38.setText("Department:");

        compName.setEditable(false);
        compName.setForeground(new java.awt.Color(102, 102, 102));
        compName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        compName.setPreferredSize(new java.awt.Dimension(6, 26));

        compBran.setEditable(false);
        compBran.setForeground(new java.awt.Color(102, 102, 102));
        compBran.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        compBran.setPreferredSize(new java.awt.Dimension(6, 26));

        compDept.setEditable(false);
        compDept.setForeground(new java.awt.Color(102, 102, 102));
        compDept.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        compDept.setPreferredSize(new java.awt.Dimension(6, 26));

        compProc.setEditable(false);
        compProc.setForeground(new java.awt.Color(102, 102, 102));
        compProc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        compProc.setPreferredSize(new java.awt.Dimension(6, 26));

        compRam.setEditable(false);
        compRam.setForeground(new java.awt.Color(102, 102, 102));
        compRam.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        compRam.setPreferredSize(new java.awt.Dimension(6, 26));

        compHdd.setEditable(false);
        compHdd.setForeground(new java.awt.Color(102, 102, 102));
        compHdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        compHdd.setPreferredSize(new java.awt.Dimension(6, 26));

        compUps.setEditable(false);
        compUps.setForeground(new java.awt.Color(102, 102, 102));
        compUps.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        compUps.setPreferredSize(new java.awt.Dimension(6, 26));

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(51, 51, 51));
        jLabel40.setText("Remarks:");

        pcEdit.setBackground(new java.awt.Color(255, 255, 255));
        pcEdit.setText("Edit");
        pcEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcEditActionPerformed(evt);
            }
        });

        compRem.setEditable(false);
        compRem.setColumns(20);
        compRem.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        compRem.setRows(5);
        jScrollPane13.setViewportView(compRem);

        pcUpdate.setBackground(new java.awt.Color(255, 255, 255));
        pcUpdate.setText("Update");
        pcUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PCinfoLayout = new javax.swing.GroupLayout(PCinfo);
        PCinfo.setLayout(PCinfoLayout);
        PCinfoLayout.setHorizontalGroup(
            PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PCinfoLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfoLayout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addGap(50, 50, 50)
                        .addGroup(PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PCinfoLayout.createSequentialGroup()
                                .addComponent(compRam, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel32))
                            .addComponent(compUps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(compHdd, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PCinfoLayout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addGroup(PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(PCinfoLayout.createSequentialGroup()
                                    .addComponent(jLabel20)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(compProc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel26)
                                .addGroup(PCinfoLayout.createSequentialGroup()
                                    .addComponent(jLabel15)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(compName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(PCinfoLayout.createSequentialGroup()
                                    .addComponent(jLabel17)
                                    .addGap(24, 24, 24)
                                    .addComponent(compBran, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel38)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(compDept, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane13)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfoLayout.createSequentialGroup()
                                .addComponent(pcUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(pcEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfoLayout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addGap(355, 355, 355)))))
                .addGap(33, 33, 33))
        );
        PCinfoLayout.setVerticalGroup(
            PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PCinfoLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(compBran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(compDept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(compName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compProc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(compRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(compHdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(compUps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jLabel40)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pcEdit)
                    .addComponent(pcUpdate))
                .addContainerGap())
        );

        compTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "null", "null", "null", "null", "null", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        compTbl.setSelectionBackground(new java.awt.Color(0, 0, 102));
        compTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                compTblMouseClicked(evt);
            }
        });
        PCtable.setViewportView(compTbl);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jLabel28.setText("Computer Information");

        pcSearchtxt.setForeground(new java.awt.Color(51, 51, 51));
        pcSearchtxt.setText("Search");
        pcSearchtxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pcSearchtxtMouseClicked(evt);
            }
        });
        pcSearchtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pcSearchtxtKeyReleased(evt);
            }
        });

        pcSort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL" }));
        pcSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcSortActionPerformed(evt);
            }
        });

        pcSearch.setText("***");

        PChistable.setBackground(new java.awt.Color(255, 255, 255));

        hisTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        hisTbl.setSelectionBackground(new java.awt.Color(0, 0, 102));
        jScrollPane14.setViewportView(hisTbl);

        countHis.setBackground(new java.awt.Color(255, 255, 255));
        countHis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel46.setText("History Found:");

        javax.swing.GroupLayout PChistableLayout = new javax.swing.GroupLayout(PChistable);
        PChistable.setLayout(PChistableLayout);
        PChistableLayout.setHorizontalGroup(
            PChistableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PChistableLayout.createSequentialGroup()
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(countHis, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane14)
        );
        PChistableLayout.setVerticalGroup(
            PChistableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PChistableLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PChistableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(countHis, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46))
                .addGap(9, 9, 9))
        );

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jLabel42.setText("Computer History");

        pcAdd.setBackground(new java.awt.Color(255, 255, 255));
        pcAdd.setText("Add");
        pcAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcAddActionPerformed(evt);
            }
        });

        pcDel.setBackground(new java.awt.Color(255, 255, 255));
        pcDel.setText("Delete");
        pcDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcDelActionPerformed(evt);
            }
        });

        jLabel47.setText("Computer/s Found:");

        countPC.setBackground(new java.awt.Color(255, 255, 255));
        countPC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout PCcardLayout = new javax.swing.GroupLayout(PCcard);
        PCcard.setLayout(PCcardLayout);
        PCcardLayout.setHorizontalGroup(
            PCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCcardLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(PCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(PChistable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PCcardLayout.createSequentialGroup()
                        .addGroup(PCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addComponent(jLabel28)
                            .addComponent(PCinfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(PCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PCcardLayout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(countPC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(PCcardLayout.createSequentialGroup()
                                    .addComponent(pcSort, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(pcSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pcSearch)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pcAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pcDel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(PCtable, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1080, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        PCcardLayout.setVerticalGroup(
            PCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PCcardLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(PCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pcDel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pcSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pcSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pcSearch)
                        .addComponent(jLabel28)
                        .addComponent(pcAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(PCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PCtable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(PCinfo, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(countPC, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47))
                .addGap(1, 1, 1)
                .addComponent(jLabel42)
                .addGap(1, 1, 1)
                .addComponent(PChistable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        INVcard.add(PCcard, "card2");

        CCcard.setBackground(new java.awt.Color(255, 255, 255));
        CCcard.setMaximumSize(new java.awt.Dimension(1700, 933));
        CCcard.setPreferredSize(new java.awt.Dimension(1700, 933));

        ccTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        ccTbl.setSelectionBackground(new java.awt.Color(0, 0, 102));
        ccTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ccTblMouseClicked(evt);
            }
        });
        jScrollPane17.setViewportView(ccTbl);

        jLabel68.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jLabel68.setText("CCTV Information");

        ccSearchtxt.setForeground(new java.awt.Color(51, 51, 51));
        ccSearchtxt.setText("Search");
        ccSearchtxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ccSearchtxtMouseClicked(evt);
            }
        });
        ccSearchtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ccSearchtxtKeyReleased(evt);
            }
        });

        ccSort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL" }));
        ccSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccSortActionPerformed(evt);
            }
        });

        ccSearch.setText("***");

        hisTbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        hisTbl2.setSelectionBackground(new java.awt.Color(0, 0, 102));
        jScrollPane18.setViewportView(hisTbl2);

        ccAdd.setBackground(new java.awt.Color(255, 255, 255));
        ccAdd.setText("Add");
        ccAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccAddActionPerformed(evt);
            }
        });

        ccDel.setBackground(new java.awt.Color(255, 255, 255));
        ccDel.setText("Delete");
        ccDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccDelActionPerformed(evt);
            }
        });

        CCinfo.setBackground(new java.awt.Color(204, 204, 204));
        CCinfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
        CCinfo.setForeground(new java.awt.Color(204, 204, 204));
        CCinfo.setMaximumSize(new java.awt.Dimension(486, 409));
        CCinfo.setPreferredSize(new java.awt.Dimension(486, 409));

        jLabel65.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(51, 51, 51));
        jLabel65.setText("Supplier:");

        jLabel67.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(51, 51, 51));
        jLabel67.setText("Branch:");

        jLabel71.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(51, 51, 51));
        jLabel71.setText("Username:");

        jLabel72.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(51, 51, 51));
        jLabel72.setText("Password:");

        jLabel73.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel73.setForeground(new java.awt.Color(51, 51, 51));
        jLabel73.setText("Number of Cameras:");

        ccSupp.setEditable(false);
        ccSupp.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        ccSupp.setForeground(new java.awt.Color(102, 102, 102));
        ccSupp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ccSupp.setPreferredSize(new java.awt.Dimension(6, 26));

        ccBran.setEditable(false);
        ccBran.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        ccBran.setForeground(new java.awt.Color(102, 102, 102));
        ccBran.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ccBran.setPreferredSize(new java.awt.Dimension(6, 26));

        ccUN.setEditable(false);
        ccUN.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        ccUN.setForeground(new java.awt.Color(102, 102, 102));
        ccUN.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ccUN.setPreferredSize(new java.awt.Dimension(6, 26));

        ccPW.setEditable(false);
        ccPW.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        ccPW.setForeground(new java.awt.Color(102, 102, 102));
        ccPW.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ccPW.setPreferredSize(new java.awt.Dimension(6, 26));

        ccNum.setEditable(false);
        ccNum.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        ccNum.setForeground(new java.awt.Color(102, 102, 102));
        ccNum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ccNum.setPreferredSize(new java.awt.Dimension(6, 26));

        jLabel74.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(51, 51, 51));
        jLabel74.setText("Remarks:");

        ccEdit.setBackground(new java.awt.Color(255, 255, 255));
        ccEdit.setText("Edit");
        ccEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccEditActionPerformed(evt);
            }
        });

        ccRem.setEditable(false);
        ccRem.setColumns(20);
        ccRem.setRows(5);
        jScrollPane1.setViewportView(ccRem);

        ccUpdate.setBackground(new java.awt.Color(255, 255, 255));
        ccUpdate.setText("Update");
        ccUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CCinfoLayout = new javax.swing.GroupLayout(CCinfo);
        CCinfo.setLayout(CCinfoLayout);
        CCinfoLayout.setHorizontalGroup(
            CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CCinfoLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CCinfoLayout.createSequentialGroup()
                        .addGroup(CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel73)
                            .addGroup(CCinfoLayout.createSequentialGroup()
                                .addGroup(CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel71, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel72, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ccPW, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                                    .addComponent(ccUN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(ccNum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CCinfoLayout.createSequentialGroup()
                                    .addComponent(jLabel67)
                                    .addGap(42, 42, 42)
                                    .addComponent(ccBran, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE))
                                .addComponent(jLabel65, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CCinfoLayout.createSequentialGroup()
                                    .addGap(102, 102, 102)
                                    .addComponent(ccSupp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(29, 29, 29))
                    .addGroup(CCinfoLayout.createSequentialGroup()
                        .addGroup(CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(CCinfoLayout.createSequentialGroup()
                                .addComponent(jLabel74)
                                .addGap(354, 354, 354))
                            .addGroup(CCinfoLayout.createSequentialGroup()
                                .addComponent(ccUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(ccEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        CCinfoLayout.setVerticalGroup(
            CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CCinfoLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(ccBran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(ccSupp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(ccUN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(ccPW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel73)
                    .addComponent(ccNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jLabel74)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CCinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ccEdit)
                    .addComponent(ccUpdate))
                .addGap(25, 25, 25))
        );

        jLabel70.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jLabel70.setText("CCTV History");

        countHis3.setBackground(new java.awt.Color(255, 255, 255));
        countHis3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel76.setText("History Found:");

        jLabel77.setText("CCTV/s Found:");

        countCC.setBackground(new java.awt.Color(255, 255, 255));
        countCC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout CCcardLayout = new javax.swing.GroupLayout(CCcard);
        CCcard.setLayout(CCcardLayout);
        CCcardLayout.setHorizontalGroup(
            CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CCcardLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CCcardLayout.createSequentialGroup()
                        .addComponent(jLabel70)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(CCcardLayout.createSequentialGroup()
                        .addGroup(CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CCcardLayout.createSequentialGroup()
                                .addGroup(CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel68)
                                    .addComponent(CCinfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(CCcardLayout.createSequentialGroup()
                                        .addComponent(ccSort, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ccSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ccSearch)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ccAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ccDel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(CCcardLayout.createSequentialGroup()
                                        .addGroup(CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(CCcardLayout.createSequentialGroup()
                                                .addComponent(jLabel77)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(countCC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 1074, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(CCcardLayout.createSequentialGroup()
                                .addGroup(CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(CCcardLayout.createSequentialGroup()
                                        .addComponent(jLabel76)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(countHis3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 1589, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(53, 53, 53))))
        );
        CCcardLayout.setVerticalGroup(
            CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CCcardLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(ccSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccSearch)
                    .addComponent(ccDel)
                    .addComponent(ccAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CCinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel77, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(countCC, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(jLabel70)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CCcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel76)
                    .addComponent(countHis3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        INVcard.add(CCcard, "card2");

        PRcard.setBackground(new java.awt.Color(255, 255, 255));
        PRcard.setMaximumSize(new java.awt.Dimension(1700, 933));
        PRcard.setPreferredSize(new java.awt.Dimension(1700, 933));

        prTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        prTbl.setSelectionBackground(new java.awt.Color(0, 0, 102));
        prTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prTblMouseClicked(evt);
            }
        });
        jScrollPane27.setViewportView(prTbl);

        jLabel86.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jLabel86.setForeground(new java.awt.Color(51, 51, 51));
        jLabel86.setText("Printer Information");

        prSearchtxt.setForeground(new java.awt.Color(51, 51, 51));
        prSearchtxt.setText("Search");
        prSearchtxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prSearchtxtMouseClicked(evt);
            }
        });
        prSearchtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                prSearchtxtKeyReleased(evt);
            }
        });

        prSort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL" }));
        prSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prSortActionPerformed(evt);
            }
        });

        prSearch.setText("***");

        PRadd.setBackground(new java.awt.Color(255, 255, 255));
        PRadd.setForeground(new java.awt.Color(0, 0, 102));
        PRadd.setText("Add");
        PRadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PRaddActionPerformed(evt);
            }
        });

        PRdel.setBackground(new java.awt.Color(255, 255, 255));
        PRdel.setForeground(new java.awt.Color(0, 0, 102));
        PRdel.setText("Delete");
        PRdel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PRdelActionPerformed(evt);
            }
        });

        jLabel88.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        jLabel88.setForeground(new java.awt.Color(51, 51, 51));
        jLabel88.setText("Printer History");

        PRinfo.setBackground(new java.awt.Color(204, 204, 204));
        PRinfo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
        PRinfo.setMaximumSize(new java.awt.Dimension(486, 409));
        PRinfo.setPreferredSize(new java.awt.Dimension(486, 407));

        jLabel75.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel75.setForeground(new java.awt.Color(51, 51, 51));
        jLabel75.setText("Department:");

        jLabel78.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel78.setForeground(new java.awt.Color(51, 51, 51));
        jLabel78.setText("Branch:");

        jLabel79.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel79.setForeground(new java.awt.Color(51, 51, 51));
        jLabel79.setText("Printer Name:");

        jLabel81.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel81.setForeground(new java.awt.Color(51, 51, 51));
        jLabel81.setText("Manufacturer:");

        prDept.setEditable(false);
        prDept.setFont(new java.awt.Font("AcadEref", 0, 15)); // NOI18N
        prDept.setForeground(new java.awt.Color(102, 102, 102));
        prDept.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        prBran.setEditable(false);
        prBran.setFont(new java.awt.Font("AcadEref", 0, 15)); // NOI18N
        prBran.setForeground(new java.awt.Color(102, 102, 102));
        prBran.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        prName.setEditable(false);
        prName.setFont(new java.awt.Font("AcadEref", 0, 15)); // NOI18N
        prName.setForeground(new java.awt.Color(102, 102, 102));
        prName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        prManu.setEditable(false);
        prManu.setFont(new java.awt.Font("AcadEref", 0, 15)); // NOI18N
        prManu.setForeground(new java.awt.Color(102, 102, 102));
        prManu.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel82.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel82.setForeground(new java.awt.Color(51, 51, 51));
        jLabel82.setText("Remarks:");

        prRem.setEditable(false);
        prRem.setColumns(20);
        prRem.setRows(5);
        jScrollPane16.setViewportView(prRem);

        prEdit.setBackground(new java.awt.Color(255, 255, 255));
        prEdit.setForeground(new java.awt.Color(0, 0, 102));
        prEdit.setText("Edit");
        prEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prEditActionPerformed(evt);
            }
        });

        prUpdate.setBackground(new java.awt.Color(255, 255, 255));
        prUpdate.setForeground(new java.awt.Color(0, 0, 102));
        prUpdate.setText("Update");
        prUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PRinfoLayout = new javax.swing.GroupLayout(PRinfo);
        PRinfo.setLayout(PRinfoLayout);
        PRinfoLayout.setHorizontalGroup(
            PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PRinfoLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PRinfoLayout.createSequentialGroup()
                        .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel75, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel78))
                        .addGap(25, 25, 25)
                        .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(prBran)
                            .addComponent(prDept, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PRinfoLayout.createSequentialGroup()
                        .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel81)
                            .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel79, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel82)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(prManu)
                            .addComponent(prName, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(PRinfoLayout.createSequentialGroup()
                            .addComponent(prUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(45, 45, 45)
                            .addComponent(prEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        PRinfoLayout.setVerticalGroup(
            PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PRinfoLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel78)
                    .addComponent(prBran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prDept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel75))
                .addGap(18, 18, 18)
                .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel79)
                    .addComponent(prName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel81)
                    .addComponent(prManu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel82)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PRinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prEdit)
                    .addComponent(prUpdate))
                .addContainerGap())
        );

        jLabel89.setText("Printer/s found:");

        countPR.setBackground(new java.awt.Color(255, 255, 255));
        countPR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        PChistable1.setBackground(new java.awt.Color(255, 255, 255));

        hisTbl3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        hisTbl3.setSelectionBackground(new java.awt.Color(0, 0, 102));
        jScrollPane15.setViewportView(hisTbl3);

        countHis2.setBackground(new java.awt.Color(255, 255, 255));
        countHis2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel48.setText("History Found:");

        javax.swing.GroupLayout PChistable1Layout = new javax.swing.GroupLayout(PChistable1);
        PChistable1.setLayout(PChistable1Layout);
        PChistable1Layout.setHorizontalGroup(
            PChistable1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PChistable1Layout.createSequentialGroup()
                .addGroup(PChistable1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 1587, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PChistable1Layout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(countHis2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PChistable1Layout.setVerticalGroup(
            PChistable1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PChistable1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PChistable1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(countHis2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48))
                .addGap(9, 9, 9))
        );

        javax.swing.GroupLayout PRcardLayout = new javax.swing.GroupLayout(PRcard);
        PRcard.setLayout(PRcardLayout);
        PRcardLayout.setHorizontalGroup(
            PRcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PRcardLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(PRcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PChistable1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel86)
                    .addGroup(PRcardLayout.createSequentialGroup()
                        .addGroup(PRcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel88)
                            .addComponent(PRinfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(PRcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane27)
                            .addGroup(PRcardLayout.createSequentialGroup()
                                .addComponent(jLabel89)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(countPR, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(PRcardLayout.createSequentialGroup()
                                .addComponent(prSort, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(prSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(PRadd, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PRdel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(53, 53, 53))
        );
        PRcardLayout.setVerticalGroup(
            PRcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PRcardLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(PRcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prSearchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prSearch)
                    .addComponent(jLabel86)
                    .addComponent(PRdel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PRadd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(PRcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PRinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane27, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(9, 9, 9)
                .addGroup(PRcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(countPR, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel89))
                .addGap(1, 1, 1)
                .addComponent(jLabel88)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PChistable1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        INVcard.add(PRcard, "card2");

        javax.swing.GroupLayout INVmaincardLayout = new javax.swing.GroupLayout(INVmaincard);
        INVmaincard.setLayout(INVmaincardLayout);
        INVmaincardLayout.setHorizontalGroup(
            INVmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(INVmaincardLayout.createSequentialGroup()
                .addComponent(PC, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(CC, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PR, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(INVcard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        INVmaincardLayout.setVerticalGroup(
            INVmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(INVmaincardLayout.createSequentialGroup()
                .addGroup(INVmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PR, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(INVmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(PC, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CC, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0)
                .addComponent(INVcard, javax.swing.GroupLayout.DEFAULT_SIZE, 946, Short.MAX_VALUE))
        );

        Maincard.add(INVmaincard, "card6");

        Adding.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setLayout(new java.awt.CardLayout());

        AddPC.setBackground(new java.awt.Color(255, 255, 255));
        AddPC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));

        PCinfo1.setBackground(new java.awt.Color(255, 255, 255));
        PCinfo1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        PCinfo1.setPreferredSize(new java.awt.Dimension(486, 409));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("PC Name:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Branch:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("Processor:");

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(51, 51, 51));
        jLabel33.setText("Hard Drive Size:");

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(51, 51, 51));
        jLabel35.setText("RAM:");

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(51, 51, 51));
        jLabel39.setText("Department:");

        compNameAdd.setBackground(new java.awt.Color(255, 255, 255));
        compNameAdd.setForeground(new java.awt.Color(102, 102, 102));
        compNameAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        compDeptAdd.setBackground(new java.awt.Color(255, 255, 255));
        compDeptAdd.setForeground(new java.awt.Color(102, 102, 102));
        compDeptAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        compProcAdd.setBackground(new java.awt.Color(255, 255, 255));
        compProcAdd.setForeground(new java.awt.Color(102, 102, 102));
        compProcAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        compRamAdd.setBackground(new java.awt.Color(255, 255, 255));
        compRamAdd.setForeground(new java.awt.Color(102, 102, 102));
        compRamAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        compHddAdd.setBackground(new java.awt.Color(255, 255, 255));
        compHddAdd.setForeground(new java.awt.Color(102, 102, 102));
        compHddAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        compUpsAdd.setBackground(new java.awt.Color(255, 255, 255));
        compUpsAdd.setForeground(new java.awt.Color(102, 102, 102));
        compUpsAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(51, 51, 51));
        jLabel41.setText("Remarks:");

        pcAddCan.setBackground(new java.awt.Color(255, 255, 255));
        pcAddCan.setForeground(new java.awt.Color(0, 0, 102));
        pcAddCan.setText("Cancel");
        pcAddCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcAddCanActionPerformed(evt);
            }
        });

        compRemAdd.setColumns(20);
        compRemAdd.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        compRemAdd.setRows(5);
        jScrollPane23.setViewportView(compRemAdd);

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(51, 51, 51));
        jLabel36.setText("UPS:");

        pcSave.setBackground(new java.awt.Color(255, 255, 255));
        pcSave.setForeground(new java.awt.Color(0, 0, 102));
        pcSave.setText("Save");
        pcSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PCinfo1Layout = new javax.swing.GroupLayout(PCinfo1);
        PCinfo1.setLayout(PCinfo1Layout);
        PCinfo1Layout.setHorizontalGroup(
            PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PCinfo1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel41)
                    .addGroup(PCinfo1Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(28, 28, 28)
                        .addComponent(addBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(compDeptAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PCinfo1Layout.createSequentialGroup()
                        .addGroup(PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel35))
                        .addGap(7, 7, 7)
                        .addComponent(compProcAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(PCinfo1Layout.createSequentialGroup()
                            .addComponent(pcSave, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pcAddCan, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane23, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PCinfo1Layout.createSequentialGroup()
                            .addGroup(PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel16)
                                .addComponent(jLabel36))
                            .addGap(10, 10, 10)
                            .addGroup(PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(PCinfo1Layout.createSequentialGroup()
                                    .addComponent(compRamAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel33)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(compHddAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(compNameAdd)
                                .addComponent(compUpsAdd)))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        PCinfo1Layout.setVerticalGroup(
            PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PCinfo1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel39)
                    .addComponent(compDeptAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(compNameAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compProcAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(24, 24, 24)
                .addGroup(PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compRamAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(compHddAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35))
                .addGap(24, 24, 24)
                .addGroup(PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compUpsAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addGap(24, 24, 24)
                .addComponent(jLabel41)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(PCinfo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pcAddCan)
                    .addComponent(pcSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 0, 102));
        jPanel4.setForeground(new java.awt.Color(0, 0, 51));

        jLabel2.setBackground(new java.awt.Color(0, 51, 255));
        jLabel2.setFont(new java.awt.Font("Leelawadee UI", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Add Computer");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        javax.swing.GroupLayout AddPCLayout = new javax.swing.GroupLayout(AddPC);
        AddPC.setLayout(AddPCLayout);
        AddPCLayout.setHorizontalGroup(
            AddPCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddPCLayout.createSequentialGroup()
                .addGroup(AddPCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PCinfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 66, Short.MAX_VALUE))
            .addGroup(AddPCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE))
        );
        AddPCLayout.setVerticalGroup(
            AddPCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddPCLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PCinfo1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE))
            .addGroup(AddPCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE))
        );

        jPanel2.add(AddPC, "card2");

        AddCC.setBackground(new java.awt.Color(255, 255, 255));
        AddCC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        PCinfo2.setBackground(new java.awt.Color(255, 255, 255));
        PCinfo2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        PCinfo2.setPreferredSize(new java.awt.Dimension(546, 503));

        ccAddCan.setBackground(new java.awt.Color(255, 255, 255));
        ccAddCan.setForeground(new java.awt.Color(0, 0, 102));
        ccAddCan.setText("Cancel");
        ccAddCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccAddCanActionPerformed(evt);
            }
        });

        ccSave.setBackground(new java.awt.Color(255, 255, 255));
        ccSave.setForeground(new java.awt.Color(0, 0, 102));
        ccSave.setText("Save");
        ccSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccSaveActionPerformed(evt);
            }
        });

        jLabel69.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(51, 51, 51));
        jLabel69.setText("Branch:");

        jLabel66.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(51, 51, 51));
        jLabel66.setText("Supplier:");

        ccSuppAdd.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        ccSuppAdd.setForeground(new java.awt.Color(102, 102, 102));
        ccSuppAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ccSuppAdd.setPreferredSize(new java.awt.Dimension(6, 26));

        jLabel80.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel80.setForeground(new java.awt.Color(51, 51, 51));
        jLabel80.setText("Username:");

        ccUNAdd.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        ccUNAdd.setForeground(new java.awt.Color(102, 102, 102));
        ccUNAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ccUNAdd.setPreferredSize(new java.awt.Dimension(6, 26));

        jLabel83.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel83.setForeground(new java.awt.Color(51, 51, 51));
        jLabel83.setText("Password:");

        ccPWAdd.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        ccPWAdd.setForeground(new java.awt.Color(102, 102, 102));
        ccPWAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ccPWAdd.setPreferredSize(new java.awt.Dimension(6, 26));

        jLabel84.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel84.setForeground(new java.awt.Color(51, 51, 51));
        jLabel84.setText("Number of Cameras:");

        ccNumAdd.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        ccNumAdd.setForeground(new java.awt.Color(102, 102, 102));
        ccNumAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ccNumAdd.setPreferredSize(new java.awt.Dimension(6, 26));

        jLabel85.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel85.setForeground(new java.awt.Color(51, 51, 51));
        jLabel85.setText("Remarks:");

        ccRemAdd.setColumns(20);
        ccRemAdd.setRows(5);
        jScrollPane2.setViewportView(ccRemAdd);

        javax.swing.GroupLayout PCinfo2Layout = new javax.swing.GroupLayout(PCinfo2);
        PCinfo2.setLayout(PCinfo2Layout);
        PCinfo2Layout.setHorizontalGroup(
            PCinfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PCinfo2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(PCinfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfo2Layout.createSequentialGroup()
                        .addComponent(ccSave, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ccAddCan, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2)
                        .addGroup(PCinfo2Layout.createSequentialGroup()
                            .addComponent(jLabel69)
                            .addGap(35, 35, 35)
                            .addGroup(PCinfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ccPWAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ccUNAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(PCinfo2Layout.createSequentialGroup()
                                    .addComponent(addBranch1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30)
                                    .addComponent(jLabel84)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ccNumAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(ccSuppAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(PCinfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel80)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfo2Layout.createSequentialGroup()
                                .addComponent(jLabel66)
                                .addGap(358, 358, 358))
                            .addComponent(jLabel83)
                            .addComponent(jLabel85))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        PCinfo2Layout.setVerticalGroup(
            PCinfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PCinfo2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(PCinfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(jLabel84)
                    .addComponent(ccNumAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBranch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(PCinfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(ccSuppAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(PCinfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel80)
                    .addComponent(ccUNAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(PCinfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel83)
                    .addComponent(ccPWAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jLabel85)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(PCinfo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ccAddCan)
                    .addComponent(ccSave))
                .addGap(51, 51, 51))
        );

        jPanel5.setBackground(new java.awt.Color(0, 0, 102));
        jPanel5.setForeground(new java.awt.Color(0, 0, 51));

        jLabel10.setBackground(new java.awt.Color(0, 51, 255));
        jLabel10.setFont(new java.awt.Font("Leelawadee UI", 0, 48)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Add CCTV");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel10)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addContainerGap())
        );

        javax.swing.GroupLayout AddCCLayout = new javax.swing.GroupLayout(AddCC);
        AddCC.setLayout(AddCCLayout);
        AddCCLayout.setHorizontalGroup(
            AddCCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddCCLayout.createSequentialGroup()
                .addGroup(AddCCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PCinfo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 66, Short.MAX_VALUE))
            .addGroup(AddCCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE))
        );
        AddCCLayout.setVerticalGroup(
            AddCCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddCCLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PCinfo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(AddCCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddCCLayout.createSequentialGroup()
                    .addGap(0, 566, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.add(AddCC, "card2");

        AddPR.setBackground(new java.awt.Color(255, 255, 255));
        AddPR.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        PCinfo3.setBackground(new java.awt.Color(255, 255, 255));
        PCinfo3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        PCinfo3.setPreferredSize(new java.awt.Dimension(546, 503));

        prAddCan.setBackground(new java.awt.Color(255, 255, 255));
        prAddCan.setForeground(new java.awt.Color(0, 0, 102));
        prAddCan.setText("Cancel");
        prAddCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prAddCanActionPerformed(evt);
            }
        });

        prSave.setBackground(new java.awt.Color(255, 255, 255));
        prSave.setForeground(new java.awt.Color(0, 0, 102));
        prSave.setText("Save");
        prSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prSaveActionPerformed(evt);
            }
        });

        jLabel87.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel87.setForeground(new java.awt.Color(51, 51, 51));
        jLabel87.setText("Branch:");

        jLabel90.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel90.setForeground(new java.awt.Color(51, 51, 51));
        jLabel90.setText("Department:");

        prDeptAdd.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        prDeptAdd.setForeground(new java.awt.Color(102, 102, 102));
        prDeptAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        prDeptAdd.setPreferredSize(new java.awt.Dimension(6, 26));

        jLabel91.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel91.setForeground(new java.awt.Color(51, 51, 51));
        jLabel91.setText("Printer Name:");

        prNameAdd.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        prNameAdd.setForeground(new java.awt.Color(102, 102, 102));
        prNameAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        prNameAdd.setPreferredSize(new java.awt.Dimension(6, 26));

        jLabel92.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel92.setForeground(new java.awt.Color(51, 51, 51));
        jLabel92.setText("Manufacturer:");

        prManuAdd.setFont(new java.awt.Font("AcadEref", 0, 16)); // NOI18N
        prManuAdd.setForeground(new java.awt.Color(102, 102, 102));
        prManuAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        prManuAdd.setPreferredSize(new java.awt.Dimension(6, 26));

        jLabel94.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel94.setForeground(new java.awt.Color(51, 51, 51));
        jLabel94.setText("Remarks:");

        prRemAdd.setColumns(20);
        prRemAdd.setRows(5);
        jScrollPane3.setViewportView(prRemAdd);

        javax.swing.GroupLayout PCinfo3Layout = new javax.swing.GroupLayout(PCinfo3);
        PCinfo3.setLayout(PCinfo3Layout);
        PCinfo3Layout.setHorizontalGroup(
            PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PCinfo3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PCinfo3Layout.createSequentialGroup()
                        .addGroup(PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfo3Layout.createSequentialGroup()
                                .addComponent(prSave, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prAddCan, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                                .addGroup(PCinfo3Layout.createSequentialGroup()
                                    .addComponent(jLabel87)
                                    .addGap(55, 55, 55)
                                    .addGroup(PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(prNameAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(prManuAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jLabel91)
                                .addComponent(jLabel92)
                                .addComponent(jLabel94)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PCinfo3Layout.createSequentialGroup()
                        .addComponent(jLabel90)
                        .addGap(17, 17, 17)
                        .addGroup(PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addBranch2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prDeptAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))))
        );
        PCinfo3Layout.setVerticalGroup(
            PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PCinfo3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel87)
                    .addComponent(addBranch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel90)
                    .addComponent(prDeptAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel91)
                    .addComponent(prNameAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel92)
                    .addComponent(prManuAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jLabel94)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(PCinfo3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prAddCan)
                    .addComponent(prSave))
                .addGap(51, 51, 51))
        );

        jPanel6.setBackground(new java.awt.Color(0, 0, 102));
        jPanel6.setForeground(new java.awt.Color(0, 0, 51));

        jLabel12.setBackground(new java.awt.Color(0, 51, 255));
        jLabel12.setFont(new java.awt.Font("Leelawadee UI", 0, 48)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Add Printer");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel12)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addContainerGap())
        );

        javax.swing.GroupLayout AddPRLayout = new javax.swing.GroupLayout(AddPR);
        AddPR.setLayout(AddPRLayout);
        AddPRLayout.setHorizontalGroup(
            AddPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddPRLayout.createSequentialGroup()
                .addGroup(AddPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PCinfo3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 66, Short.MAX_VALUE))
            .addGroup(AddPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE))
        );
        AddPRLayout.setVerticalGroup(
            AddPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddPRLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PCinfo3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(AddPRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE))
        );

        jPanel2.add(AddPR, "card2");

        javax.swing.GroupLayout AddingLayout = new javax.swing.GroupLayout(Adding);
        Adding.setLayout(AddingLayout);
        AddingLayout.setHorizontalGroup(
            AddingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddingLayout.createSequentialGroup()
                .addContainerGap(557, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(543, 543, 543))
        );
        AddingLayout.setVerticalGroup(
            AddingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddingLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        Maincard.add(Adding, "card5");

        HISmaincard.setBackground(new java.awt.Color(255, 255, 255));

        allHisTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        allHisTbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        allHisTbl.setSelectionBackground(new java.awt.Color(0, 51, 102));
        allHisTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allHisTblMouseClicked(evt);
            }
        });
        jScrollPane20.setViewportView(allHisTbl);

        HISrepair.setBackground(new java.awt.Color(255, 255, 255));
        HISrepair.setForeground(new java.awt.Color(0, 0, 102));
        HISrepair.setText("Schedule Repair");

        HISreplace.setBackground(new java.awt.Color(255, 255, 255));
        HISreplace.setForeground(new java.awt.Color(0, 0, 102));
        HISreplace.setText("Request Replacement");

        HISdispose.setBackground(new java.awt.Color(255, 255, 255));
        HISdispose.setForeground(new java.awt.Color(0, 0, 102));
        HISdispose.setText("Dispose");

        HISsearch.setText("***");

        HISsearchf.setForeground(new java.awt.Color(0, 0, 102));
        HISsearchf.setText("Search");

        HISfilter.setForeground(new java.awt.Color(0, 0, 102));
        HISfilter.setText("Filter");
        HISfilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HISfilterActionPerformed(evt);
            }
        });

        HISdetails.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        HISdetails.setLayout(new java.awt.CardLayout());

        jLabel113.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel113.setText("PC Name:");

        jLabel115.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel115.setText("Start Date:");

        jLabel116.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel116.setText("Action:");

        jLabel117.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel117.setText("End Date:");

        jLabel118.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel118.setText("Start Time:");

        jLabel119.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel119.setText("End Time:");

        jLabel120.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel120.setText("Remarks:");

        jLabel121.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel121.setText("Performed by:");

        jLabel122.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel122.setText("Price:");

        pcHisRem.setColumns(20);
        pcHisRem.setRows(5);
        jScrollPane21.setViewportView(pcHisRem);

        pcHisUpdate.setBackground(new java.awt.Color(255, 255, 255));
        pcHisUpdate.setForeground(new java.awt.Color(0, 0, 102));
        pcHisUpdate.setText("Edit");
        pcHisUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcHisUpdateActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(0, 0, 103));

        jLabel103.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel103.setForeground(new java.awt.Color(255, 255, 255));
        jLabel103.setText("Computer Repair & Maintenance History");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel103, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel103)
                .addContainerGap())
        );

        jLabel141.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel141.setText("Branch:");

        javax.swing.GroupLayout HISpcLayout = new javax.swing.GroupLayout(HISpc);
        HISpc.setLayout(HISpcLayout);
        HISpcLayout.setHorizontalGroup(
            HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HISpcLayout.createSequentialGroup()
                .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISpcLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pcHisUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HISpcLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(17, 17, 17))
            .addGroup(HISpcLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpcLayout.createSequentialGroup()
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel113)
                            .addComponent(jLabel116))
                        .addGap(43, 43, 43)
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(HISpcLayout.createSequentialGroup()
                                .addComponent(pcHisAct, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel122)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pcHisPric, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pcHisName)))
                    .addGroup(HISpcLayout.createSequentialGroup()
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel115)
                            .addComponent(jLabel118))
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HISpcLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pcHisSTime, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(HISpcLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(pcHisEDate, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HISpcLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel119))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISpcLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel117)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pcHisETime, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(pcHisSDate)))
                    .addGroup(HISpcLayout.createSequentialGroup()
                        .addComponent(jLabel121)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pcHisPerf, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 59, Short.MAX_VALUE)
                .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpcLayout.createSequentialGroup()
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HISpcLayout.createSequentialGroup()
                                .addComponent(jLabel141)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pcHisBran, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel120))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(HISpcLayout.createSequentialGroup()
                        .addComponent(jScrollPane21, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                        .addGap(20, 20, 20))))
        );
        HISpcLayout.setVerticalGroup(
            HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HISpcLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpcLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pcHisBran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel141)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISpcLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel113, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pcHisName))
                        .addGap(17, 17, 17)))
                .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpcLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel120)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pcHisUpdate))
                    .addGroup(HISpcLayout.createSequentialGroup()
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel116)
                            .addComponent(pcHisAct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel122)
                            .addComponent(pcHisPric, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel121)
                            .addComponent(pcHisPerf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(HISpcLayout.createSequentialGroup()
                                .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel115)
                                    .addComponent(pcHisEDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2))
                            .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel117)
                                .addComponent(pcHisSDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(HISpcLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pcHisSTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel119)
                            .addComponent(jLabel118)
                            .addComponent(pcHisETime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );

        HISdetails.add(HISpc, "card1");

        jLabel114.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel114.setText("Service Provider:");

        jLabel143.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel143.setText("Start Date:");

        jLabel144.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel144.setText("Action:");

        jLabel145.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel145.setText("End Date:");

        jLabel146.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel146.setText("Start Time:");

        jLabel147.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel147.setText("End Time:");

        jLabel148.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel148.setText("Remarks:");

        jLabel149.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel149.setText("Performed by:");

        jLabel150.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel150.setText("Price:");

        ccHisRem.setColumns(20);
        ccHisRem.setRows(5);
        jScrollPane24.setViewportView(ccHisRem);

        ccHisUpdate.setBackground(new java.awt.Color(255, 255, 255));
        ccHisUpdate.setForeground(new java.awt.Color(0, 0, 102));
        ccHisUpdate.setText("Edit");
        ccHisUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccHisUpdateActionPerformed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(0, 0, 103));

        jLabel112.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel112.setForeground(new java.awt.Color(255, 255, 255));
        jLabel112.setText("CCTV Repair & Maintenance History");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel112, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel112)
                .addContainerGap())
        );

        jLabel151.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel151.setText("Branch:");

        javax.swing.GroupLayout HISccLayout = new javax.swing.GroupLayout(HIScc);
        HIScc.setLayout(HISccLayout);
        HISccLayout.setHorizontalGroup(
            HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HISccLayout.createSequentialGroup()
                .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISccLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ccHisUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HISccLayout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(17, 17, 17))
            .addGroup(HISccLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISccLayout.createSequentialGroup()
                        .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel143)
                            .addComponent(jLabel146))
                        .addGap(52, 52, 52)
                        .addComponent(ccHisSTime, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel147)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ccHisETime))
                    .addGroup(HISccLayout.createSequentialGroup()
                        .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel114)
                            .addComponent(jLabel144)
                            .addComponent(jLabel149))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(HISccLayout.createSequentialGroup()
                                    .addComponent(ccHisAct, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel150)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(ccHisPric, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(ccHisName, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ccHisPerf, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(HISccLayout.createSequentialGroup()
                                .addComponent(ccHisSDate)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel145)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccHisEDate, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(65, 65, 65)
                .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISccLayout.createSequentialGroup()
                        .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HISccLayout.createSequentialGroup()
                                .addComponent(jLabel151)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ccHisBran, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel148))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(HISccLayout.createSequentialGroup()
                        .addComponent(jScrollPane24, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                        .addGap(20, 20, 20))))
        );
        HISccLayout.setVerticalGroup(
            HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HISccLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISccLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ccHisBran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel151)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISccLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel114, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ccHisName))
                        .addGap(16, 16, 16)))
                .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISccLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel148)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ccHisUpdate))
                    .addGroup(HISccLayout.createSequentialGroup()
                        .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel144)
                            .addComponent(ccHisAct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel150)
                            .addComponent(ccHisPric, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel149)
                            .addComponent(ccHisPerf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(HISccLayout.createSequentialGroup()
                                .addComponent(jLabel143)
                                .addGap(2, 2, 2))
                            .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel145)
                                .addComponent(ccHisSDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ccHisEDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(HISccLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ccHisSTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel147)
                            .addComponent(jLabel146)
                            .addComponent(ccHisETime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );

        HISdetails.add(HIScc, "card1");

        jLabel152.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel152.setText("Manufacturer:");

        jLabel153.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel153.setText("Start Date:");

        jLabel154.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel154.setText("Action:");

        jLabel155.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel155.setText("End Date:");

        jLabel156.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel156.setText("Start Time:");

        jLabel157.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel157.setText("End Time:");

        jLabel158.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel158.setText("Remarks:");

        jLabel159.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel159.setText("Performed by:");

        jLabel160.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel160.setText("Price:");

        prHisRem.setColumns(20);
        prHisRem.setRows(5);
        jScrollPane26.setViewportView(prHisRem);

        prHisUpdate.setBackground(new java.awt.Color(255, 255, 255));
        prHisUpdate.setForeground(new java.awt.Color(0, 0, 102));
        prHisUpdate.setText("Edit");
        prHisUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prHisUpdateActionPerformed(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(0, 0, 103));

        jLabel104.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel104.setForeground(new java.awt.Color(255, 255, 255));
        jLabel104.setText("Printer Repair & Maintenance History");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel104, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel104)
                .addContainerGap())
        );

        jLabel161.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel161.setText("Branch:");

        javax.swing.GroupLayout HISprLayout = new javax.swing.GroupLayout(HISpr);
        HISpr.setLayout(HISprLayout);
        HISprLayout.setHorizontalGroup(
            HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HISprLayout.createSequentialGroup()
                .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISprLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(prHisUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HISprLayout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(17, 17, 17))
            .addGroup(HISprLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISprLayout.createSequentialGroup()
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HISprLayout.createSequentialGroup()
                                .addComponent(jLabel154)
                                .addGap(63, 63, 63))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISprLayout.createSequentialGroup()
                                .addComponent(jLabel152)
                                .addGap(18, 18, 18)))
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(HISprLayout.createSequentialGroup()
                                .addComponent(prHisAct, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel160)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(prHisPric, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(prHisName)))
                    .addGroup(HISprLayout.createSequentialGroup()
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel153)
                            .addComponent(jLabel156))
                        .addGap(34, 34, 34)
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(prHisSDate, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(prHisSTime))
                        .addGap(18, 18, 18)
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel157, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel155, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prHisETime, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prHisEDate, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(HISprLayout.createSequentialGroup()
                        .addComponent(jLabel159)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prHisPerf, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 58, Short.MAX_VALUE)
                .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISprLayout.createSequentialGroup()
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HISprLayout.createSequentialGroup()
                                .addComponent(jLabel161)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(prHisBran, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel158))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(HISprLayout.createSequentialGroup()
                        .addComponent(jScrollPane26, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                        .addGap(20, 20, 20))))
        );
        HISprLayout.setVerticalGroup(
            HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HISprLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISprLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prHisBran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel161)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISprLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prHisName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel152, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)))
                .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISprLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel158)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(prHisUpdate))
                    .addGroup(HISprLayout.createSequentialGroup()
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prHisAct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel160)
                            .addComponent(prHisPric, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel159)
                            .addComponent(prHisPerf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(HISprLayout.createSequentialGroup()
                                .addComponent(jLabel153)
                                .addGap(2, 2, 2))
                            .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel155)
                                .addComponent(prHisSDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(prHisEDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(HISprLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prHisSTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel157)
                            .addComponent(jLabel156)
                            .addComponent(prHisETime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(HISprLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel154)))
                .addGap(18, 18, 18))
        );

        HISdetails.add(HISpr, "card1");

        jLabel123.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel123.setText("PC Name:");

        jLabel124.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel124.setText("Start Date:");

        jLabel125.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel125.setText("Action:");

        jLabel126.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel126.setText("End Date:");

        jLabel127.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel127.setText("Start Time:");

        jLabel128.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel128.setText("End Time:");

        jLabel129.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel129.setText("Remarks:");

        jLabel130.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel130.setText("Performed by:");

        jLabel131.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel131.setText("Price:");

        pcHisRem1.setColumns(20);
        pcHisRem1.setRows(5);
        jScrollPane22.setViewportView(pcHisRem1);

        pcHisUpdate1.setBackground(new java.awt.Color(255, 255, 255));
        pcHisUpdate1.setForeground(new java.awt.Color(0, 0, 102));
        pcHisUpdate1.setText("Update");

        jPanel11.setBackground(new java.awt.Color(0, 0, 103));

        jLabel105.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel105.setForeground(new java.awt.Color(255, 255, 255));
        jLabel105.setText("Computer Repair & Maintenance History");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel105, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel105)
                .addContainerGap())
        );

        jLabel162.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel162.setText("Branch:");

        javax.swing.GroupLayout HISpc1Layout = new javax.swing.GroupLayout(HISpc1);
        HISpc1.setLayout(HISpc1Layout);
        HISpc1Layout.setHorizontalGroup(
            HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HISpc1Layout.createSequentialGroup()
                .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISpc1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pcHisUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HISpc1Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(17, 17, 17))
            .addGroup(HISpc1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpc1Layout.createSequentialGroup()
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel123)
                            .addComponent(jLabel125))
                        .addGap(43, 43, 43)
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(HISpc1Layout.createSequentialGroup()
                                .addComponent(pcHisAct1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel131)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pcHisPric1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pcHisName1)))
                    .addGroup(HISpc1Layout.createSequentialGroup()
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel124)
                            .addComponent(jLabel127))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(HISpc1Layout.createSequentialGroup()
                                .addComponent(pcHisSTime1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel128))
                            .addGroup(HISpc1Layout.createSequentialGroup()
                                .addComponent(pcHisSDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pcHisEDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel126)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pcHisETime1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(HISpc1Layout.createSequentialGroup()
                                .addComponent(pcHisEDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pcHisSDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(HISpc1Layout.createSequentialGroup()
                        .addComponent(jLabel130)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pcHisPerf1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 59, Short.MAX_VALUE)
                .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpc1Layout.createSequentialGroup()
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HISpc1Layout.createSequentialGroup()
                                .addComponent(jLabel162)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pcHisBran1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel129))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(HISpc1Layout.createSequentialGroup()
                        .addComponent(jScrollPane22, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                        .addGap(20, 20, 20))))
        );
        HISpc1Layout.setVerticalGroup(
            HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HISpc1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpc1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pcHisBran1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel162)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISpc1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel123, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pcHisName1))
                        .addGap(17, 17, 17)))
                .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpc1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel129)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pcHisUpdate1))
                    .addGroup(HISpc1Layout.createSequentialGroup()
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel125)
                            .addComponent(pcHisAct1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel131)
                            .addComponent(pcHisPric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel130)
                            .addComponent(pcHisPerf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pcHisEDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(pcHisSDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel124)
                                    .addComponent(pcHisSDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel126)
                                .addComponent(pcHisEDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(HISpc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pcHisSTime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel128)
                            .addComponent(jLabel127)
                            .addComponent(pcHisETime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );

        HISdetails.add(HISpc1, "card1");

        jLabel132.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel132.setText("Service Provider:");

        jLabel163.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel163.setText("Start Date:");

        jLabel164.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel164.setText("Action:");

        jLabel165.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel165.setText("End Date:");

        jLabel166.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel166.setText("Start Time:");

        jLabel167.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel167.setText("End Time:");

        jLabel168.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel168.setText("Remarks:");

        jLabel169.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel169.setText("Performed by:");

        jLabel170.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel170.setText("Price:");

        ccHisRem1.setColumns(20);
        ccHisRem1.setRows(5);
        jScrollPane28.setViewportView(ccHisRem1);

        ccHisUpdate1.setBackground(new java.awt.Color(255, 255, 255));
        ccHisUpdate1.setForeground(new java.awt.Color(0, 0, 102));
        ccHisUpdate1.setText("Update");

        jPanel12.setBackground(new java.awt.Color(0, 0, 103));

        jLabel133.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel133.setForeground(new java.awt.Color(255, 255, 255));
        jLabel133.setText("CCTV Repair & Maintenance History");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel133, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel133)
                .addContainerGap())
        );

        jLabel171.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel171.setText("Branch:");

        javax.swing.GroupLayout HIScc1Layout = new javax.swing.GroupLayout(HIScc1);
        HIScc1.setLayout(HIScc1Layout);
        HIScc1Layout.setHorizontalGroup(
            HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HIScc1Layout.createSequentialGroup()
                .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HIScc1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ccHisUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HIScc1Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(17, 17, 17))
            .addGroup(HIScc1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HIScc1Layout.createSequentialGroup()
                        .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel163)
                            .addComponent(jLabel166))
                        .addGap(52, 52, 52)
                        .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HIScc1Layout.createSequentialGroup()
                                .addComponent(ccHisSTime1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel167)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccHisETime1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(HIScc1Layout.createSequentialGroup()
                                .addComponent(ccHisSDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccHisEDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(HIScc1Layout.createSequentialGroup()
                        .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel132)
                            .addComponent(jLabel164)
                            .addComponent(jLabel169))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HIScc1Layout.createSequentialGroup()
                                .addComponent(ccHisAct1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel170)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ccHisPric1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ccHisName1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(HIScc1Layout.createSequentialGroup()
                                    .addComponent(jLabel165)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ccHisEDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ccHisSDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(ccHisPerf1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 66, Short.MAX_VALUE)
                .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HIScc1Layout.createSequentialGroup()
                        .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HIScc1Layout.createSequentialGroup()
                                .addComponent(jLabel171)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ccHisBran1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel168))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(HIScc1Layout.createSequentialGroup()
                        .addComponent(jScrollPane28, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                        .addGap(20, 20, 20))))
        );
        HIScc1Layout.setVerticalGroup(
            HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HIScc1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HIScc1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ccHisBran1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel171)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HIScc1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel132, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ccHisName1))
                        .addGap(16, 16, 16)))
                .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HIScc1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel168)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ccHisUpdate1))
                    .addGroup(HIScc1Layout.createSequentialGroup()
                        .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel164)
                            .addComponent(ccHisAct1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel170)
                            .addComponent(ccHisPric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel169)
                            .addComponent(ccHisPerf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ccHisEDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ccHisSDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel163)
                                    .addComponent(ccHisSDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel165)
                            .addComponent(ccHisEDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(HIScc1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ccHisSTime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel167)
                            .addComponent(jLabel166)
                            .addComponent(ccHisETime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );

        HISdetails.add(HIScc1, "card1");

        jLabel172.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel172.setText("Manufacturer:");

        jLabel173.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel173.setText("Start Date:");

        jLabel174.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel174.setText("Action:");

        jLabel175.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel175.setText("End Date:");

        jLabel176.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel176.setText("Start Time:");

        jLabel177.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel177.setText("End Time:");

        jLabel178.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel178.setText("Remarks:");

        jLabel179.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel179.setText("Performed by:");

        jLabel180.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel180.setText("Price:");

        prHisRem1.setColumns(20);
        prHisRem1.setRows(5);
        jScrollPane29.setViewportView(prHisRem1);

        prHisUpdate1.setBackground(new java.awt.Color(255, 255, 255));
        prHisUpdate1.setForeground(new java.awt.Color(0, 0, 102));
        prHisUpdate1.setText("Update");

        jPanel13.setBackground(new java.awt.Color(0, 0, 103));

        jLabel106.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel106.setForeground(new java.awt.Color(255, 255, 255));
        jLabel106.setText("Printer Repair & Maintenance History");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel106, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel106)
                .addContainerGap())
        );

        jLabel181.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel181.setText("Branch:");

        javax.swing.GroupLayout HISpr1Layout = new javax.swing.GroupLayout(HISpr1);
        HISpr1.setLayout(HISpr1Layout);
        HISpr1Layout.setHorizontalGroup(
            HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HISpr1Layout.createSequentialGroup()
                .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, HISpr1Layout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(HISpr1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(prHisUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
            .addGroup(HISpr1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpr1Layout.createSequentialGroup()
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HISpr1Layout.createSequentialGroup()
                                .addComponent(jLabel174)
                                .addGap(63, 63, 63))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISpr1Layout.createSequentialGroup()
                                .addComponent(jLabel172)
                                .addGap(18, 18, 18)))
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(HISpr1Layout.createSequentialGroup()
                                .addComponent(prHisAct1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel180)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(prHisPric1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(prHisName1)))
                    .addGroup(HISpr1Layout.createSequentialGroup()
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel173)
                            .addComponent(jLabel176))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(HISpr1Layout.createSequentialGroup()
                                .addComponent(prHisSTime1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel177))
                            .addGroup(HISpr1Layout.createSequentialGroup()
                                .addComponent(prHisSDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prHisEDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel175)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prHisETime1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(HISpr1Layout.createSequentialGroup()
                                .addComponent(prHisEDate2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(prHisSDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(HISpr1Layout.createSequentialGroup()
                        .addComponent(jLabel179)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prHisPerf1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 58, Short.MAX_VALUE)
                .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpr1Layout.createSequentialGroup()
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HISpr1Layout.createSequentialGroup()
                                .addComponent(jLabel181)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(prHisBran1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel178))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(HISpr1Layout.createSequentialGroup()
                        .addComponent(jScrollPane29, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                        .addGap(20, 20, 20))))
        );
        HISpr1Layout.setVerticalGroup(
            HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HISpr1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpr1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prHisBran1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel181)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISpr1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prHisName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel172, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)))
                .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISpr1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel178)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(prHisUpdate1))
                    .addGroup(HISpr1Layout.createSequentialGroup()
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prHisAct1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel180)
                            .addComponent(prHisPric1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel179)
                            .addComponent(prHisPerf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(prHisEDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(prHisSDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel173)
                                    .addComponent(prHisSDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel175)
                                .addComponent(prHisEDate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(HISpr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prHisSTime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel177)
                            .addComponent(jLabel176)
                            .addComponent(prHisETime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(HISpr1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel174)))
                .addGap(18, 18, 18))
        );

        HISdetails.add(HISpr1, "card1");

        Filter.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setText("Device Type:");

        jLabel4.setText("Branch:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 51));
        jLabel5.setText("Filter");

        jLabel6.setText("Start Date:");

        hisSortCateg.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Computer", "CCTV", "Printer" }));

        hisSortBran.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("End Date:");

        hisHide.setBackground(new java.awt.Color(255, 255, 255));
        hisHide.setText("Hide");
        hisHide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hisHideActionPerformed(evt);
            }
        });

        hisGo.setBackground(new java.awt.Color(255, 255, 255));
        hisGo.setText("Go");

        javax.swing.GroupLayout FilterLayout = new javax.swing.GroupLayout(Filter);
        Filter.setLayout(FilterLayout);
        FilterLayout.setHorizontalGroup(
            FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FilterLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(FilterLayout.createSequentialGroup()
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hisSortCateg, 0, 141, Short.MAX_VALUE)
                            .addComponent(hisSortBran, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hisSortSDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterLayout.createSequentialGroup()
                                    .addComponent(hisGo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(hisHide))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FilterLayout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(hisSortEDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        FilterLayout.setVerticalGroup(
            FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FilterLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hisSortEDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FilterLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(hisSortCateg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(hisSortSDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(hisSortBran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(FilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hisHide)
                    .addComponent(hisGo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel49.setText("History Found:");

        countHis5.setBackground(new java.awt.Color(255, 255, 255));
        countHis5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout HISmaincardLayout = new javax.swing.GroupLayout(HISmaincard);
        HISmaincard.setLayout(HISmaincardLayout);
        HISmaincardLayout.setHorizontalGroup(
            HISmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HISmaincardLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(HISmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISmaincardLayout.createSequentialGroup()
                        .addComponent(jLabel49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(countHis5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HISmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(HISmaincardLayout.createSequentialGroup()
                            .addComponent(HISsearchf, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(HISsearch)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(HISfilter, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 1570, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(HISmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(HISmaincardLayout.createSequentialGroup()
                                .addComponent(HISdetails, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(HISmaincardLayout.createSequentialGroup()
                                .addGap(1124, 1124, 1124)
                                .addComponent(HISrepair, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HISreplace)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HISdispose)))))
                .addGap(68, 68, 68))
        );
        HISmaincardLayout.setVerticalGroup(
            HISmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HISmaincardLayout.createSequentialGroup()
                .addGroup(HISmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISmaincardLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HISmaincardLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(HISdetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, 0)
                .addGroup(HISmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HISfilter)
                    .addComponent(HISsearch)
                    .addComponent(HISsearchf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(HISmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HISmaincardLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(HISmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HISrepair)
                            .addComponent(HISreplace)
                            .addComponent(HISdispose)))
                    .addGroup(HISmaincardLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(HISmaincardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(countHis5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49))))
                .addGap(86, 86, 86))
        );

        Maincard.add(HISmaincard, "card3");

        Add.setBackground(new java.awt.Color(255, 255, 255));
        Add.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        PCinfo4.setBackground(new java.awt.Color(255, 255, 255));
        PCinfo4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        PCinfo4.setPreferredSize(new java.awt.Dimension(486, 409));

        hisAddCan.setBackground(new java.awt.Color(255, 255, 255));
        hisAddCan.setForeground(new java.awt.Color(0, 0, 102));
        hisAddCan.setText("Cancel");

        hisSave.setBackground(new java.awt.Color(255, 255, 255));
        hisSave.setForeground(new java.awt.Color(0, 0, 102));
        hisSave.setText("Save");

        jLabel142.setText("Remarks:");

        jLabel138.setText("End Date:");

        jLabel136.setText("Price:");

        jLabel135.setText("Performed by:");

        jLabel139.setText("Start Time:");

        jLabel137.setText("Start Date:");

        jLabel140.setText("End Time:");

        jLabel134.setText("Action:");

        hisRemAdd.setColumns(20);
        hisRemAdd.setRows(5);
        jScrollPane25.setViewportView(hisRemAdd);

        javax.swing.GroupLayout PCinfo4Layout = new javax.swing.GroupLayout(PCinfo4);
        PCinfo4.setLayout(PCinfo4Layout);
        PCinfo4Layout.setHorizontalGroup(
            PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PCinfo4Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PCinfo4Layout.createSequentialGroup()
                        .addComponent(hisSave, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hisAddCan, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(PCinfo4Layout.createSequentialGroup()
                            .addGap(372, 372, 372)
                            .addComponent(hisEDateAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PCinfo4Layout.createSequentialGroup()
                            .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel137)
                                .addComponent(jLabel139))
                            .addGap(39, 39, 39)
                            .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(hisSTimeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(hisSDateAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PCinfo4Layout.createSequentialGroup()
                                    .addGap(14, 14, 14)
                                    .addComponent(jLabel140))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfo4Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel138)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(hisETimeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel142)
                        .addGroup(PCinfo4Layout.createSequentialGroup()
                            .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel134)
                                .addComponent(jLabel135)
                                .addComponent(jLabel136))
                            .addGap(18, 18, 18)
                            .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(hisPerfAdd, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(hisPricAdd)
                                .addComponent(hisActAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        PCinfo4Layout.setVerticalGroup(
            PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PCinfo4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel134)
                    .addComponent(hisActAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel135)
                    .addComponent(hisPerfAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PCinfo4Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(hisPricAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PCinfo4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel136)))
                .addGap(24, 24, 24)
                .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel137)
                        .addComponent(jLabel138))
                    .addComponent(hisSDateAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hisEDateAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hisSTimeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel140)
                    .addComponent(jLabel139)
                    .addComponent(hisETimeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel142)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addGroup(PCinfo4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hisAddCan)
                    .addComponent(hisSave))
                .addGap(25, 25, 25))
        );

        jPanel7.setBackground(new java.awt.Color(0, 0, 103));
        jPanel7.setForeground(new java.awt.Color(0, 0, 51));

        jLabel14.setBackground(new java.awt.Color(0, 51, 255));
        jLabel14.setFont(new java.awt.Font("Leelawadee UI", 0, 48)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Add Device History");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addContainerGap())
        );

        javax.swing.GroupLayout AddLayout = new javax.swing.GroupLayout(Add);
        Add.setLayout(AddLayout);
        AddLayout.setHorizontalGroup(
            AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLayout.createSequentialGroup()
                .addGroup(AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PCinfo4, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(90, Short.MAX_VALUE))
            .addGroup(AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE))
        );
        AddLayout.setVerticalGroup(
            AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PCinfo4, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE))
            .addGroup(AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AddHistoryLayout = new javax.swing.GroupLayout(AddHistory);
        AddHistory.setLayout(AddHistoryLayout);
        AddHistoryLayout.setHorizontalGroup(
            AddHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddHistoryLayout.createSequentialGroup()
                .addContainerGap(458, Short.MAX_VALUE)
                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(413, 413, 413))
        );
        AddHistoryLayout.setVerticalGroup(
            AddHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddHistoryLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        Maincard.add(AddHistory, "card4");

        jPanel1.add(Maincard, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 1, 1700, 982));
        Maincard.getAccessibleContext().setAccessibleName("");

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        INV.setBackground(new java.awt.Color(255, 255, 255));
        INV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/inv16.jpg"))); // NOI18N
        INV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INVActionPerformed(evt);
            }
        });

        HIS.setBackground(new java.awt.Color(255, 255, 255));
        HIS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/his16.jpg"))); // NOI18N
        HIS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HISActionPerformed(evt);
            }
        });

        LOG.setBackground(new java.awt.Color(255, 255, 255));
        LOG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/log16.jpg"))); // NOI18N
        LOG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOGActionPerformed(evt);
            }
        });

        LOGOUT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/signout16.jpg"))); // NOI18N
        LOGOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOGOUTActionPerformed(evt);
            }
        });

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logo.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LOGOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(LOG, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(HIS, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(INV, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addComponent(INV, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(HIS, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(LOG, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(LOGOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 340));

        datefield.setFont(new java.awt.Font("Yu Gothic Medium", 0, 20)); // NOI18N
        datefield.setForeground(new java.awt.Color(255, 255, 0));
        datefield.setText("07/11/2019");
        jPanel1.add(datefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 940, -1, -1));

        timefield.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 36)); // NOI18N
        timefield.setForeground(new java.awt.Color(255, 255, 255));
        timefield.setText("23:23:00");
        jPanel1.add(timefield, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 900, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 982, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LOGOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOGOUTActionPerformed
   logoutLog();
   LoginOpen();
    }//GEN-LAST:event_LOGOUTActionPerformed

    private void LOGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LOGActionPerformed

    private void HISActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HISActionPerformed
       Filter.setVisible(false);
       INVmaincard.setVisible(false);
       HISmaincard.setVisible(true);
       showHis();
    }//GEN-LAST:event_HISActionPerformed

    private void INVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INVActionPerformed
     INVmaincard.setVisible(true);
     HISmaincard.setVisible(false);
     PCcard.setVisible(true);
     CCcard.setVisible(false);
     PRcard.setVisible(false);
        showPC();
        refreshPC();
        pcSet();
    }//GEN-LAST:event_INVActionPerformed

    private void CCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CCActionPerformed
     PCcard.setVisible(false);
     CCcard.setVisible(true);
     PRcard.setVisible(false);
        showCC();
        ccSet();
    }//GEN-LAST:event_CCActionPerformed

    private void PRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRActionPerformed
     PCcard.setVisible(false);
     CCcard.setVisible(false);
     PRcard.setVisible(true);
        showPR();
        prSet();
    }//GEN-LAST:event_PRActionPerformed

    private void HISfilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HISfilterActionPerformed
      Filter.setVisible(true);
    }//GEN-LAST:event_HISfilterActionPerformed

    private void PCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PCActionPerformed
     PCcard.setVisible(true);
     CCcard.setVisible(false);
     PRcard.setVisible(false);
        showPC();
        pcSet();
    }//GEN-LAST:event_PCActionPerformed

    private void hisHideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hisHideActionPerformed
     Filter.setVisible(false);
    }//GEN-LAST:event_hisHideActionPerformed

    private void pcSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcSortActionPerformed
pcSort(); 
pcSet();
    }//GEN-LAST:event_pcSortActionPerformed

    private void ccSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccSortActionPerformed
ccSort(); 
ccSet(); 
    }//GEN-LAST:event_ccSortActionPerformed

    private void prSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prSortActionPerformed
prSort(); 
prSet();        // TODO add your handling code here:
    }//GEN-LAST:event_prSortActionPerformed

    private void compTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compTblMouseClicked
 pcSet();       // TODO add your handling code here:
    }//GEN-LAST:event_compTblMouseClicked

    private void ccTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ccTblMouseClicked
ccSet();        // TODO add your handling code here:
    }//GEN-LAST:event_ccTblMouseClicked

    private void prTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prTblMouseClicked
prSet();        // TODO add your handling code here:
    }//GEN-LAST:event_prTblMouseClicked

    private void pcSearchtxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pcSearchtxtMouseClicked
pcSearchtxt.setText("");     
    }//GEN-LAST:event_pcSearchtxtMouseClicked

    private void ccSearchtxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ccSearchtxtMouseClicked
ccSearchtxt.setText("");  
    }//GEN-LAST:event_ccSearchtxtMouseClicked

    private void prSearchtxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prSearchtxtMouseClicked
prSearchtxt.setText("");     
    }//GEN-LAST:event_prSearchtxtMouseClicked

    private void pcSearchtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pcSearchtxtKeyReleased
searchPC();      
    }//GEN-LAST:event_pcSearchtxtKeyReleased

    private void ccSearchtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ccSearchtxtKeyReleased
searchCC();
    }//GEN-LAST:event_ccSearchtxtKeyReleased

    private void prSearchtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prSearchtxtKeyReleased
searchPR();
    }//GEN-LAST:event_prSearchtxtKeyReleased

    private void pcEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcEditActionPerformed
pcEditable();
    }//GEN-LAST:event_pcEditActionPerformed

    private void ccEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccEditActionPerformed
ccEditable(); 
    }//GEN-LAST:event_ccEditActionPerformed

    private void prEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prEditActionPerformed
prEditable();
    }//GEN-LAST:event_prEditActionPerformed

    private void pcUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcUpdateActionPerformed
pcUpdate();    
pcNonEditable();
    }//GEN-LAST:event_pcUpdateActionPerformed

    private void ccUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccUpdateActionPerformed
ccUpdate(); 
ccNonEditable();
    }//GEN-LAST:event_ccUpdateActionPerformed

    private void prUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prUpdateActionPerformed
prUpdate(); 
prNonEditable();
    }//GEN-LAST:event_prUpdateActionPerformed

    private void pcDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcDelActionPerformed
pcDel();
refreshPC();
pcSet();
    }//GEN-LAST:event_pcDelActionPerformed

    private void ccDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccDelActionPerformed
ccDel();
refreshCC();
ccSet();       
    }//GEN-LAST:event_ccDelActionPerformed

    private void PRdelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRdelActionPerformed
prDel();
refreshPR();
prSet();     
    }//GEN-LAST:event_PRdelActionPerformed

    private void pcAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcAddActionPerformed
     INVmaincard.setVisible(false);
     AddPC.setVisible(true);
     AddCC.setVisible(false);
     AddPR.setVisible(false);
     Adding.setVisible(true);
    }//GEN-LAST:event_pcAddActionPerformed

    private void ccAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccAddActionPerformed
     INVmaincard.setVisible(false);
     AddPC.setVisible(false);
     AddCC.setVisible(true);
     AddPR.setVisible(false);
     Adding.setVisible(true);  
    }//GEN-LAST:event_ccAddActionPerformed

    private void PRaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRaddActionPerformed
     INVmaincard.setVisible(false);
     AddPC.setVisible(false);
     AddCC.setVisible(false);
     AddPR.setVisible(true);
     Adding.setVisible(true);      
    }//GEN-LAST:event_PRaddActionPerformed

    private void pcAddCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcAddCanActionPerformed
     INVmaincard.setVisible(true);
     AddPC.setVisible(false);
     AddCC.setVisible(false);
     AddPR.setVisible(false);
     Adding.setVisible(false);   
    }//GEN-LAST:event_pcAddCanActionPerformed

    private void ccAddCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccAddCanActionPerformed
     INVmaincard.setVisible(true);
     AddPC.setVisible(false);
     AddCC.setVisible(false);
     AddPR.setVisible(false);
     Adding.setVisible(false);        
    }//GEN-LAST:event_ccAddCanActionPerformed

    private void prAddCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prAddCanActionPerformed
     INVmaincard.setVisible(true);
     AddPC.setVisible(false);
     AddCC.setVisible(false);
     AddPR.setVisible(false);
     Adding.setVisible(false);        
    }//GEN-LAST:event_prAddCanActionPerformed

    private void allHisTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allHisTblMouseClicked
hisSet();        // TODO add your handling code here:
    }//GEN-LAST:event_allHisTblMouseClicked

    private void pcSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcSaveActionPerformed
pcAdd();        // TODO add your handling code here:
    }//GEN-LAST:event_pcSaveActionPerformed

    private void ccSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccSaveActionPerformed
ccAdd();        // TODO add your handling code here:
    }//GEN-LAST:event_ccSaveActionPerformed

    private void prSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prSaveActionPerformed
prAdd();        // TODO add your handling code here:
    }//GEN-LAST:event_prSaveActionPerformed

    private void pcHisUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcHisUpdateActionPerformed
        HISpc1.setVisible(true);
        HIScc1.setVisible(false);
        HISpr1.setVisible(false);
        HISpc.setVisible(false);
        HIScc.setVisible(false);
        HISpr.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) allHisTbl.getModel();
        int selectedRowIndex = allHisTbl.getSelectedRow();
        SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
        HISdetails.setVisible(true);
        pcHisBran1.setText(model.getValueAt(selectedRowIndex,0).toString());
        pcHisName1.setText(model.getValueAt(selectedRowIndex,1).toString());
        pcHisAct1.setText(model.getValueAt(selectedRowIndex,3).toString());
        pcHisPerf1.setText(model.getValueAt(selectedRowIndex,4).toString());
        pcHisSDate2.setText(model.getValueAt(selectedRowIndex,5).toString());
        pcHisEDate2.setText(model.getValueAt(selectedRowIndex,6).toString());
        pcHisSTime1.setText(model.getValueAt(selectedRowIndex,7).toString());
        pcHisETime1.setText(model.getValueAt(selectedRowIndex,8).toString());
        pcHisPric1.setText(model.getValueAt(selectedRowIndex,9).toString());
        pcHisRem1.setText(model.getValueAt(selectedRowIndex,10).toString());
    }//GEN-LAST:event_pcHisUpdateActionPerformed

    private void ccHisUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccHisUpdateActionPerformed
        HISpc1.setVisible(false);
        HIScc1.setVisible(true);
        HISpr1.setVisible(false);
        HISpc.setVisible(false);
        HIScc.setVisible(false);
        HISpr.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) allHisTbl.getModel();
        int selectedRowIndex = allHisTbl.getSelectedRow();
        SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
        HISdetails.setVisible(true);
        ccHisBran1.setText(model.getValueAt(selectedRowIndex,0).toString());
        ccHisName1.setText(model.getValueAt(selectedRowIndex,1).toString());
        ccHisAct1.setText(model.getValueAt(selectedRowIndex,3).toString());
        ccHisPerf1.setText(model.getValueAt(selectedRowIndex,4).toString());
        ccHisSDate2.setText(model.getValueAt(selectedRowIndex,5).toString());
        ccHisEDate2.setText(model.getValueAt(selectedRowIndex,6).toString());
        ccHisSTime1.setText(model.getValueAt(selectedRowIndex,7).toString());
        ccHisETime1.setText(model.getValueAt(selectedRowIndex,8).toString());
        ccHisPric1.setText(model.getValueAt(selectedRowIndex,9).toString());
        ccHisRem1.setText(model.getValueAt(selectedRowIndex,10).toString());
    }//GEN-LAST:event_ccHisUpdateActionPerformed

    private void prHisUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prHisUpdateActionPerformed
        HISpc1.setVisible(false);
        HIScc1.setVisible(false);
        HISpr1.setVisible(true);
        HISpc.setVisible(false);
        HIScc.setVisible(false);
        HISpr.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) allHisTbl.getModel();
        int selectedRowIndex = allHisTbl.getSelectedRow();
        SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
        HISdetails.setVisible(true);
        prHisBran1.setText(model.getValueAt(selectedRowIndex,0).toString());
        prHisName1.setText(model.getValueAt(selectedRowIndex,1).toString());
        prHisAct1.setText(model.getValueAt(selectedRowIndex,3).toString());
        prHisPerf1.setText(model.getValueAt(selectedRowIndex,4).toString());
        prHisSDate2.setText(model.getValueAt(selectedRowIndex,5).toString());
        prHisEDate2.setText(model.getValueAt(selectedRowIndex,6).toString());
        prHisSTime1.setText(model.getValueAt(selectedRowIndex,7).toString());
        prHisETime1.setText(model.getValueAt(selectedRowIndex,8).toString());
        prHisPric1.setText(model.getValueAt(selectedRowIndex,9).toString());
        prHisRem1.setText(model.getValueAt(selectedRowIndex,10).toString());
    }//GEN-LAST:event_prHisUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
          
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Homepage().setVisible(true);
            }
        });
    
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Add;
    private javax.swing.JPanel AddCC;
    private javax.swing.JPanel AddHistory;
    private javax.swing.JPanel AddPC;
    private javax.swing.JPanel AddPR;
    private javax.swing.JPanel Adding;
    private javax.swing.JButton CC;
    private javax.swing.JPanel CCcard;
    private javax.swing.JPanel CCinfo;
    private javax.swing.JPanel Filter;
    private javax.swing.JButton HIS;
    private javax.swing.JPanel HIScc;
    private javax.swing.JPanel HIScc1;
    private javax.swing.JPanel HISdetails;
    private javax.swing.JButton HISdispose;
    private javax.swing.JButton HISfilter;
    private javax.swing.JPanel HISmaincard;
    private javax.swing.JPanel HISpc;
    private javax.swing.JPanel HISpc1;
    private javax.swing.JPanel HISpr;
    private javax.swing.JPanel HISpr1;
    private javax.swing.JButton HISrepair;
    private javax.swing.JButton HISreplace;
    private javax.swing.JLabel HISsearch;
    private javax.swing.JTextField HISsearchf;
    private javax.swing.JButton INV;
    private javax.swing.JPanel INVcard;
    private javax.swing.JPanel INVmaincard;
    private javax.swing.JButton LOG;
    private javax.swing.JButton LOGOUT;
    private javax.swing.JPanel Maincard;
    private javax.swing.JButton PC;
    private javax.swing.JPanel PCcard;
    private javax.swing.JPanel PChistable;
    private javax.swing.JPanel PChistable1;
    private javax.swing.JPanel PCinfo;
    private javax.swing.JPanel PCinfo1;
    private javax.swing.JPanel PCinfo2;
    private javax.swing.JPanel PCinfo3;
    private javax.swing.JPanel PCinfo4;
    private javax.swing.JScrollPane PCtable;
    private javax.swing.JButton PR;
    private javax.swing.JButton PRadd;
    private javax.swing.JPanel PRcard;
    private javax.swing.JButton PRdel;
    private javax.swing.JPanel PRinfo;
    private javax.swing.JComboBox<String> addBranch;
    private javax.swing.JComboBox<String> addBranch1;
    private javax.swing.JComboBox<String> addBranch2;
    private javax.swing.JTable allHisTbl;
    private javax.swing.JButton ccAdd;
    public static javax.swing.JButton ccAddCan;
    private javax.swing.JTextField ccBran;
    private javax.swing.JButton ccDel;
    public static javax.swing.JButton ccEdit;
    private javax.swing.JTextField ccHisAct;
    private javax.swing.JTextField ccHisAct1;
    private javax.swing.JTextField ccHisBran;
    private javax.swing.JTextField ccHisBran1;
    private javax.swing.JTextField ccHisEDate;
    private com.toedter.calendar.JDateChooser ccHisEDate1;
    private javax.swing.JTextField ccHisEDate2;
    private javax.swing.JTextField ccHisETime;
    private javax.swing.JTextField ccHisETime1;
    private javax.swing.JTextField ccHisName;
    private javax.swing.JTextField ccHisName1;
    private javax.swing.JTextField ccHisPerf;
    private javax.swing.JTextField ccHisPerf1;
    private javax.swing.JTextField ccHisPric;
    private javax.swing.JTextField ccHisPric1;
    private javax.swing.JTextArea ccHisRem;
    private javax.swing.JTextArea ccHisRem1;
    private javax.swing.JTextField ccHisSDate;
    private com.toedter.calendar.JDateChooser ccHisSDate1;
    private javax.swing.JTextField ccHisSDate2;
    private javax.swing.JTextField ccHisSTime;
    private javax.swing.JTextField ccHisSTime1;
    private javax.swing.JButton ccHisUpdate;
    private javax.swing.JButton ccHisUpdate1;
    private javax.swing.JTextField ccNum;
    private javax.swing.JTextField ccNumAdd;
    private javax.swing.JTextField ccPW;
    private javax.swing.JTextField ccPWAdd;
    private javax.swing.JTextArea ccRem;
    private javax.swing.JTextArea ccRemAdd;
    public static javax.swing.JButton ccSave;
    private javax.swing.JLabel ccSearch;
    private javax.swing.JTextField ccSearchtxt;
    public static javax.swing.JComboBox ccSort;
    private javax.swing.JTextField ccSupp;
    private javax.swing.JTextField ccSuppAdd;
    private javax.swing.JTable ccTbl;
    private javax.swing.JTextField ccUN;
    private javax.swing.JTextField ccUNAdd;
    public static javax.swing.JButton ccUpdate;
    private javax.swing.JTextField compBran;
    private javax.swing.JTextField compDept;
    private javax.swing.JTextField compDeptAdd;
    private javax.swing.JTextField compHdd;
    private javax.swing.JTextField compHddAdd;
    private javax.swing.JTextField compName;
    private javax.swing.JTextField compNameAdd;
    private javax.swing.JTextField compProc;
    private javax.swing.JTextField compProcAdd;
    private javax.swing.JTextField compRam;
    private javax.swing.JTextField compRamAdd;
    private javax.swing.JTextArea compRem;
    private javax.swing.JTextArea compRemAdd;
    private javax.swing.JTable compTbl;
    private javax.swing.JTextField compUps;
    private javax.swing.JTextField compUpsAdd;
    private javax.swing.JLabel countCC;
    private javax.swing.JLabel countHis;
    private javax.swing.JLabel countHis2;
    private javax.swing.JLabel countHis3;
    private javax.swing.JLabel countHis5;
    private javax.swing.JLabel countPC;
    private javax.swing.JLabel countPR;
    private javax.swing.JLabel datefield;
    private javax.swing.JTextField hisActAdd;
    public static javax.swing.JButton hisAddCan;
    private com.toedter.calendar.JDateChooser hisEDateAdd;
    private javax.swing.JTextField hisETimeAdd;
    private javax.swing.JButton hisGo;
    private javax.swing.JButton hisHide;
    private javax.swing.JTextField hisPerfAdd;
    private javax.swing.JTextField hisPricAdd;
    private javax.swing.JTextArea hisRemAdd;
    private com.toedter.calendar.JDateChooser hisSDateAdd;
    private javax.swing.JTextField hisSTimeAdd;
    public static javax.swing.JButton hisSave;
    private javax.swing.JComboBox<String> hisSortBran;
    private javax.swing.JComboBox<String> hisSortCateg;
    private com.toedter.calendar.JDateChooser hisSortEDate;
    private com.toedter.calendar.JDateChooser hisSortSDate;
    private javax.swing.JTable hisTbl;
    private javax.swing.JTable hisTbl2;
    private javax.swing.JTable hisTbl3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel140;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel142;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel144;
    private javax.swing.JLabel jLabel145;
    private javax.swing.JLabel jLabel146;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel150;
    private javax.swing.JLabel jLabel151;
    private javax.swing.JLabel jLabel152;
    private javax.swing.JLabel jLabel153;
    private javax.swing.JLabel jLabel154;
    private javax.swing.JLabel jLabel155;
    private javax.swing.JLabel jLabel156;
    private javax.swing.JLabel jLabel157;
    private javax.swing.JLabel jLabel158;
    private javax.swing.JLabel jLabel159;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel160;
    private javax.swing.JLabel jLabel161;
    private javax.swing.JLabel jLabel162;
    private javax.swing.JLabel jLabel163;
    private javax.swing.JLabel jLabel164;
    private javax.swing.JLabel jLabel165;
    private javax.swing.JLabel jLabel166;
    private javax.swing.JLabel jLabel167;
    private javax.swing.JLabel jLabel168;
    private javax.swing.JLabel jLabel169;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel170;
    private javax.swing.JLabel jLabel171;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel173;
    private javax.swing.JLabel jLabel174;
    private javax.swing.JLabel jLabel175;
    private javax.swing.JLabel jLabel176;
    private javax.swing.JLabel jLabel177;
    private javax.swing.JLabel jLabel178;
    private javax.swing.JLabel jLabel179;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel180;
    private javax.swing.JLabel jLabel181;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane29;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton pcAdd;
    public static javax.swing.JButton pcAddCan;
    private javax.swing.JButton pcDel;
    public static javax.swing.JButton pcEdit;
    private javax.swing.JTextField pcHisAct;
    private javax.swing.JTextField pcHisAct1;
    private javax.swing.JTextField pcHisBran;
    private javax.swing.JTextField pcHisBran1;
    private javax.swing.JTextField pcHisEDate;
    private com.toedter.calendar.JDateChooser pcHisEDate1;
    private javax.swing.JTextField pcHisEDate2;
    private javax.swing.JTextField pcHisETime;
    private javax.swing.JTextField pcHisETime1;
    private javax.swing.JTextField pcHisName;
    private javax.swing.JTextField pcHisName1;
    private javax.swing.JTextField pcHisPerf;
    private javax.swing.JTextField pcHisPerf1;
    private javax.swing.JTextField pcHisPric;
    private javax.swing.JTextField pcHisPric1;
    private javax.swing.JTextArea pcHisRem;
    private javax.swing.JTextArea pcHisRem1;
    private javax.swing.JTextField pcHisSDate;
    private com.toedter.calendar.JDateChooser pcHisSDate1;
    private javax.swing.JTextField pcHisSDate2;
    private javax.swing.JTextField pcHisSTime;
    private javax.swing.JTextField pcHisSTime1;
    private javax.swing.JButton pcHisUpdate;
    private javax.swing.JButton pcHisUpdate1;
    public static javax.swing.JButton pcSave;
    private javax.swing.JLabel pcSearch;
    private javax.swing.JTextField pcSearchtxt;
    public static javax.swing.JComboBox pcSort;
    public static javax.swing.JButton pcUpdate;
    public static javax.swing.JButton prAddCan;
    private javax.swing.JTextField prBran;
    private javax.swing.JTextField prDept;
    private javax.swing.JTextField prDeptAdd;
    public static javax.swing.JButton prEdit;
    private javax.swing.JTextField prHisAct;
    private javax.swing.JTextField prHisAct1;
    private javax.swing.JTextField prHisBran;
    private javax.swing.JTextField prHisBran1;
    private javax.swing.JTextField prHisEDate;
    private com.toedter.calendar.JDateChooser prHisEDate1;
    private javax.swing.JTextField prHisEDate2;
    private javax.swing.JTextField prHisETime;
    private javax.swing.JTextField prHisETime1;
    private javax.swing.JTextField prHisName;
    private javax.swing.JTextField prHisName1;
    private javax.swing.JTextField prHisPerf;
    private javax.swing.JTextField prHisPerf1;
    private javax.swing.JTextField prHisPric;
    private javax.swing.JTextField prHisPric1;
    private javax.swing.JTextArea prHisRem;
    private javax.swing.JTextArea prHisRem1;
    private javax.swing.JTextField prHisSDate;
    private com.toedter.calendar.JDateChooser prHisSDate1;
    private javax.swing.JTextField prHisSDate2;
    private javax.swing.JTextField prHisSTime;
    private javax.swing.JTextField prHisSTime1;
    private javax.swing.JButton prHisUpdate;
    private javax.swing.JButton prHisUpdate1;
    private javax.swing.JTextField prManu;
    private javax.swing.JTextField prManuAdd;
    private javax.swing.JTextField prName;
    private javax.swing.JTextField prNameAdd;
    private javax.swing.JTextArea prRem;
    private javax.swing.JTextArea prRemAdd;
    public static javax.swing.JButton prSave;
    private javax.swing.JLabel prSearch;
    private javax.swing.JTextField prSearchtxt;
    public static javax.swing.JComboBox prSort;
    private javax.swing.JTable prTbl;
    public static javax.swing.JButton prUpdate;
    private javax.swing.JLabel timefield;
    // End of variables declaration//GEN-END:variables
    public String sql,sql1; 
    public String utype;
//FUNCTIONS-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Output Table Contents------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void showPC(){;
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT BRANCH as Branch, DEPARTMENT as Department,OWNER as CurrentUser,PROCESSOR as Processor,RAM as Memory,HARDDISK as HardDisk, ID FROM dbo.invPC";         
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = compTbl.getColumnModel();
compTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
compTbl.setRowSelectionInterval(0,0);
}
public void showCC(){
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, SP as ServiceProvider,CAM as Quantity,uN as Username,Pw as Password, ID FROM dbo.invCC";         
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = ccTbl.getColumnModel();
ccTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
   ccTbl.setRowSelectionInterval(0,0);
}
public void showPR(){
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, Manufacturer,Printername as Name,Department, ID FROM dbo.invPR";         
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = prTbl.getColumnModel();
prTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
   prTbl.setRowSelectionInterval(0,0);
}
public void showHis(){
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, Action,Categ as Classification,Name,Perf as PerformedBy,SDate as StartDate,EDate as EndDate,STime as StartTime,ETime as EndTime,Price,Remarks,HIS_ID as ID FROM dbo.History;";         
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = allHisTbl.getColumnModel();
allHisTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
public void showHisPC(){
        DefaultTableModel model = (DefaultTableModel) compTbl.getModel();
        int selectedRowIndex = compTbl.getSelectedRow();
        String ID = model.getValueAt(selectedRowIndex,6).toString();
        //format([SalesDate], 'yyyy-MM-dd')
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, Action,SDate as StartDate,EDate as EndDate,Price,HIS_ID as HistoryID, ITEM_ID as ID FROM dbo.History WHERE Categ = 'Computer' AND ITEM_ID = '"+ID+"'";         
rs=st.executeQuery(sql); 
TableColumnModel columnModel = hisTbl.getColumnModel();
hisTbl.setModel(DbUtils.resultSetToTableModel(rs));
   }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
public void showHisCC(){
         DefaultTableModel model = (DefaultTableModel) ccTbl.getModel();
        int selectedRowIndex = ccTbl.getSelectedRow();
        String ID = model.getValueAt(selectedRowIndex,5).toString();
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, Action,SDate as StartDate,EDate as EndDate,Price,HIS_ID as HistoryID, ITEM_ID as ID FROM dbo.History WHERE Categ = 'CCTV' AND ITEM_ID = '"+ID+"'";         
ResultSet rs=st.executeQuery(sql);
TableColumnModel columnModel = hisTbl2.getColumnModel();
hisTbl2.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
public void showHisPR(){
        DefaultTableModel model = (DefaultTableModel) prTbl.getModel();
        int selectedRowIndex = prTbl.getSelectedRow();
        String ID = model.getValueAt(selectedRowIndex,4).toString();
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, Action,SDate as StartDate,EDate as EndDate,Price,HIS_ID as HistoryID, ITEM_ID as ID FROM dbo.History WHERE Categ = 'Printer' AND ITEM_ID = '"+ID+"'";         
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = hisTbl3.getColumnModel();
hisTbl3.setModel(DbUtils.resultSetToTableModel(rs));
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
//End of Table Output------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Initializing Content------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void initBranch(){
try { 
Connection con1 = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");           
Statement st1=con1.createStatement();         
String sql1 = "SELECT BRANCH FROM dbo.Branch";         
rs1=st1.executeQuery(sql1);
while(rs1.next()){
String Branch = rs1.getString("BRANCH");
pcSort.addItem(Branch);
ccSort.addItem(Branch);
prSort.addItem(Branch);
hisSortBran.addItem(Branch);
addBranch.addItem(Branch);
addBranch1.addItem(Branch);
addBranch2.addItem(Branch);

      }
     }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLOpt22 : " + ex.getSQLState()); 
 }
}
private void setIcon() {
setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/NEMAR LOGO 2.png")));
    }
//End of Initialization------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Search Function------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void searchPC(){
String ID = pcSearchtxt.getText();
String Branch = pcSort.getSelectedItem().toString(); 
if((Branch == "ALL")||(ID == "")){
try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT BRANCH as Branch, DEPARTMENT as Department,OWNER as CurrentUser,PROCESSOR as Processor,RAM as Memory,HARDDISK as HardDisk, ID  FROM dbo.invPC WHERE BRANCH LIKE '"+ID+"%' OR DEPARTMENT LIKE '"+ID+"%' OR OWNER LIKE '%"+ID+"%' OR PROCESSOR LIKE '%"+ID+"%' OR RAM LIKE '"+ID+"%' OR HARDDISK LIKE '"+ID+"%';";         
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = compTbl.getColumnModel();
compTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
else{
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT BRANCH as Branch, DEPARTMENT as Department,OWNER as CurrentUser,PROCESSOR as Processor,RAM as Memory,HARDDISK as HardDisk, ID   FROM dbo.invPC WHERE BRANCH = '"+Branch+"' AND DEPARTMENT LIKE '"+ID+"%' OR BRANCH = '"+Branch+"' AND OWNER LIKE '%"+ID+"%' OR BRANCH = '"+Branch+"' AND PROCESSOR LIKE '%"+ID+"%' OR BRANCH = '"+Branch+"' AND RAM LIKE '"+ID+"%' OR BRANCH = '"+Branch+"' AND HARDDISK LIKE '"+ID+"%';";         
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = compTbl.getColumnModel();
compTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }    
}
compTbl.setRowSelectionInterval(0,0);
pcSet();
}
public void searchCC(){
String ID = ccSearchtxt.getText();  
String Branch = ccSort.getSelectedItem().toString();
if((Branch == "ALL")||(ID == "")){
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, SP as ServiceProvider,CAM as Quantity,uN as Username,Pw as Password, ID FROM dbo.invCC WHERE Branch LIKE '"+Branch+"%' OR SP LIKE  '%"+ID+"%' OR CAM LIKE '%"+ID+"%' OR uN = '"+ID+"' OR Pw = '"+ID+"' ";         
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = ccTbl.getColumnModel();
ccTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
else{
try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, SP as ServiceProvider,CAM as Quantity,uN as Username,Pw as Password, ID   FROM dbo.invCC WHERE Branch = '"+Branch+"' AND SP LIKE  '%"+ID+"%' OR Branch = '"+Branch+"' AND CAM LIKE '%"+ID+"%' OR Branch = '"+Branch+"' AND uN = '"+ID+"' OR Branch = '"+Branch+"' AND Pw = '"+ID+"' ";         
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = ccTbl.getColumnModel();
ccTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }

ccTbl.setRowSelectionInterval(0,0);}
ccSet();
}
public void searchPR(){
String ID = prSearchtxt.getText();
String Branch = prSort.getSelectedItem().toString();
if((Branch == "ALL")||(ID == "")){
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, Manufacturer,Printername as Name,Department, ID  FROM dbo.invPR WHERE Branch LIKE '"+ID+"%' OR Manufacturer LIKE '%"+ID+"%' OR Printername LIKE '%"+ID+"%' OR Department LIKE '"+ID+"%'";         
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = prTbl.getColumnModel();
prTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
else{
try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, Manufacturer,Printername as Name,Department, ID  FROM dbo.invPR WHERE Branch = '"+Branch+"' AND Manufacturer LIKE '%"+ID+"%' OR Branch = '"+Branch+"' AND Printername LIKE '%"+ID+"%' OR Branch = '"+Branch+"' AND Department LIKE '"+ID+"%'";         
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = prTbl.getColumnModel();
prTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
prTbl.setRowSelectionInterval(0,0);
prSet();
}
//End of Search Function ----------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Refreshing Screen Content------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void refreshPC(){
pcSearchtxt.setText("Search");
pcSort.setSelectedItem("ALL");
compTbl.setRowSelectionInterval(0,0);

}
public void refreshCC(){
ccSearchtxt.setText("Search");
ccSort.setSelectedItem("ALL");
ccTbl.setRowSelectionInterval(0,0);
}
public void refreshPR(){
prSearchtxt.setText("Search");
prSort.setSelectedItem("ALL");
prTbl.setRowSelectionInterval(0,0);
}
public void refreshHIS(){
//PC
prHisName.setText("");
prHisBran.setText("");
prHisAct.setText("");
prHisPric.setText("");
prHisSTime.setText("");
prHisETime.setText("");
prHisRem.setText("");
prHisSDate.setText("");
prHisEDate.setText("");
//PC
pcHisName.setText("");
pcHisBran.setText("");
pcHisAct.setText("");
pcHisPric.setText("");
pcHisSTime.setText("");
pcHisETime.setText("");
pcHisRem.setText("");
pcHisSDate.setText("");
pcHisEDate.setText("");
//CC
ccHisName.setText("");
ccHisBran.setText("");
ccHisAct.setText("");
ccHisPric.setText("");
ccHisSTime.setText("");
ccHisETime.setText("");
ccHisRem.setText("");
ccHisSDate.setText("");
ccHisEDate.setText("");
allHisTbl.setRowSelectionInterval(0,0);
/*
prRem.setText("");  
*/
}
//End of Screen Content Refresh------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Opening Other Window------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void LoginOpen(){
         Login l = new Login();
        l.setVisible(true);
        dispose();   
}
//Opening of Window Opening------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Logs----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void logoutLog(){
    Object[] options = { "OK", "CANCEL" };
int n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?", "Delete",
JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
null, options, options[0]);
 
    if(n == JOptionPane.OK_OPTION){ 
        try {
        con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
        Statement sta = con.createStatement();
        String newsql = "INSERT INTO dbo.userLogs(uType,Laction,Ldate,Ltime) VALUES ('" + utype+"','Logout','"+dt.format(date)+"','"+tm.format(time)+"')";					
        sta.execute(newsql);        // TODO add your handling code here:
    } catch (SQLException ex) {
        Logger.getLogger(Homepage.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    if(n == JOptionPane.NO_OPTION){ 
/*
jDateChooser1.setCalendar(null);
jTextField13.setText("");
*/
    }
    if(n == JOptionPane.CLOSED_OPTION){
/*
jDateChooser1.setCalendar(null);
jTextField3.setText("");
*/
    }
}
//End Of Logs---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Basic Add Functions------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void pcAdd(){
String s1 = addBranch.getSelectedItem().toString();
String s2 = compDeptAdd.getText();
String s3 = compNameAdd.getText();
String s4 = compProcAdd.getText();
String s5 = compRamAdd.getText();
String s6 = compHddAdd.getText();
String s7 = compUpsAdd.getText();
String s8 = compRemAdd.getText();
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");           
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
 String sql ="INSERT INTO dbo.invPC (BRANCH,DEPARTMENT,OWNER,PROCESSOR,RAM,HARDDISK,UPS,REM)  VALUES ('"+s1+"','"+s2+"','"+s3+"','"+s4+"','"+s5+"','"+s6+"','"+s7+"','"+s8+"')";         
st.execute(sql);
JOptionPane.showMessageDialog(null,"Item Added!"); 
Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('Add', 'Computer','"+s1+"-"+s2+"-"+s3+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
refreshPC();
}
public void ccAdd(){
String s1 = addBranch1.getSelectedItem().toString();
String s2 = ccSuppAdd.getText();
String s3 = ccNumAdd.getText();
String s4 = ccUNAdd.getText();
String s5 = ccPWAdd.getText();
String s6 = ccRemAdd.getText();
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");           
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
 String sql ="INSERT INTO dbo.invCC (Branch,SP,CAM,uN,pW,REM)  VALUES ('"+s1+"','"+s2+"','"+s3+"','"+s4+"','"+s5+"','"+s6+"')";         
st.execute(sql);
JOptionPane.showMessageDialog(null,"Item Added!"); 
Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('Add', 'CCTV','"+s1+"-"+s2+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
refreshCC();    
}
public void prAdd(){
String s1 = addBranch2.getSelectedItem().toString();
String s2 = prManuAdd.getText();
String s3 = prNameAdd.getText();
String s4 = prDeptAdd.getText();
String s5 = prRemAdd.getText();
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");           
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
 String sql ="INSERT INTO dbo.invPR (Branch,Manufacturer,Printername,Department,REM)  VALUES ('"+s1+"','"+s2+"','"+s3+"','"+s4+"','"+s5+"')";         
st.execute(sql);
JOptionPane.showMessageDialog(null,"Item Added!"); 
Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('Add', 'Printer','"+s1+"-"+s4+"-"+s3+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
refreshPR();    
}
//End of Add Functions-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Basic Editing Functions------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void pcUpdate(){ 
DefaultTableModel model = (DefaultTableModel) compTbl.getModel();
int selectedRowIndex = compTbl.getSelectedRow();
String ID = model.getValueAt(selectedRowIndex,6).toString();
String s1 = compBran.getText();
String s2 = compDept.getText();
String s3 = compName.getText();
String s4 = compProc.getText();
String s5 = compRam.getText();
String s6 = compHdd.getText();
String s7 = compUps.getText();
String s8 = compRem.getText();
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");           
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
String sql ="UPDATE dbo.invPC SET BRANCH = '"+s1+"',DEPARTMENT = '"+s2+"',OWNER = '"+s3+"',PROCESSOR = '"+s4+"',RAM = '"+s5+"',HARDDISK = '"+s6+"',UPS = '"+s7+"',REM = '"+s8+"' WHERE ID = '"+ID+"'";         
st.executeUpdate(sql);

Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('Edit', 'Computer','"+s1+"-"+s2+"-"+s3+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
JOptionPane.showMessageDialog(null,"Item Updated!"); 
refreshPC();
}
public void ccUpdate(){
DefaultTableModel model = (DefaultTableModel) ccTbl.getModel();
int selectedRowIndex = ccTbl.getSelectedRow();
String ID = model.getValueAt(selectedRowIndex,5).toString();
String s1 = ccBran.getText();
String s2 = ccSupp.getText();
String s3 = ccUN.getText();
String s4 = ccPW.getText();
String s5 = ccNum.getText();
String s6 = ccRem.getText();
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");           
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
 String sql ="UPDATE dbo.invCC SET Branch = '"+s1+"',SP = '"+s2+"',CAM = '"+s3+"',uN = '"+s4+"',pW ='"+s5+"',REM = '"+s6+"' WHERE ID = '"+ID+"'";         
st.execute(sql);

Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('Update', 'CCTV','"+s1+"-"+s2+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
JOptionPane.showMessageDialog(null,"Item Added!"); 
refreshCC();    
}
public void prUpdate(){
DefaultTableModel model = (DefaultTableModel) prTbl.getModel();
int selectedRowIndex = prTbl.getSelectedRow();
String ID = model.getValueAt(selectedRowIndex,4).toString();   
String s1 = prBran.getText();
String s2 = prManu.getText();
String s3 = prName.getText();
String s4 = prDept.getText();
String s5 = prRem.getText();
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");           
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
 String sql ="UPDATE dbo.invPR Branch = '"+s1+"',Manufacturer = '"+s2+"',Printername = '"+s3+"' ,Department = '"+s4+"',REM = '"+s5+"' WHERE ID = '"+ID+"'";         
st.execute(sql);

Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('Update', 'Printer','"+s1+"-"+s4+"-"+s3+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
JOptionPane.showMessageDialog(null,"Item Updated!"); 
refreshPR();    
}
//End of Editing Functions------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Basic Deleting Function------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void pcDel(){
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
String s1 = compBran.getText();
String s2 = compDept.getText();
String s3 = compName.getText();
String s4 = compProc.getText();
String s5 = compRam.getText();
String s6 = compHdd.getText();
String s7 = compUps.getText();
String s8 = compRem.getText();
       DefaultTableModel model = (DefaultTableModel) compTbl.getModel();
        int selectedRowIndex = compTbl.getSelectedRow();
        String ID = model.getValueAt(selectedRowIndex,6).toString();
        Object[] options = { "OK", "CANCEL" };
int n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?", "Delete",
JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
null, options, options[0]);
 
    if(n == JOptionPane.OK_OPTION){ 
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");              
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
 String sql ="DELETE FROM dbo.invPC WHERE ID = '"+ID+"'";
st.execute(sql);

Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('Delete', 'Computer','"+s1+"-"+s2+"-"+s3+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
JOptionPane.showMessageDialog(null,"Device Deleted!"); 
PCaddArchives();
}
    if(n == JOptionPane.NO_OPTION){ 
/*
jDateChooser1.setCalendar(null);
jTextField13.setText("");
*/
    }
    if(n == JOptionPane.CLOSED_OPTION){
/*
jDateChooser1.setCalendar(null);
jTextField3.setText("");
*/
    }
}
public void ccDel(){
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
String s1 = ccBran.getText();
String s2 = ccSupp.getText();
String s3 = ccUN.getText();
String s4 = ccPW.getText();
String s5 = ccNum.getText();
String s6 = ccRem.getText();
       DefaultTableModel model = (DefaultTableModel) ccTbl.getModel();
       int selectedRowIndex = ccTbl.getSelectedRow();
       String ID = model.getValueAt(selectedRowIndex,5).toString();

Object[] options = { "OK", "CANCEL" };
int n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?", "Delete",
JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
null, options, options[0]);
 
    if(n == JOptionPane.OK_OPTION){ 
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");              
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
 String sql ="DELETE FROM dbo.invCC WHERE ID = '"+ID+"'";         
st.execute(sql);

Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('Delete', 'CCTV','"+s1+"-"+s2+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
JOptionPane.showMessageDialog(null,"Device Deleted!"); 
CCaddArchives();
}
    if(n == JOptionPane.NO_OPTION){ 
/*
jDateChooser1.setCalendar(null);
jTextField13.setText("");
*/
    }
    if(n == JOptionPane.CLOSED_OPTION){
/*
jDateChooser1.setCalendar(null);
jTextField3.setText("");
*/
    }
}
public void prDel(){
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
String s1 = prBran.getText();
String s2 = prManu.getText();
String s3 = prName.getText();
String s4 = prDept.getText();
String s5 = prRem.getText();
       DefaultTableModel model = (DefaultTableModel) prTbl.getModel();
       int selectedRowIndex = prTbl.getSelectedRow();
       String ID = model.getValueAt(selectedRowIndex,4).toString();

Object[] options = { "OK", "CANCEL" };
int n = JOptionPane.showOptionDialog(null, "Are you sure you want to proceed?", "Delete",
JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
null, options, options[0]);
 
    if(n == JOptionPane.OK_OPTION){ 
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");              
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
 String sql ="DELETE FROM dbo.invPR WHERE ID = '"+ID+"'";         
st.execute(sql);

Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('Delete', 'Printer','"+s1+"-"+s4+"-"+s3+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
JOptionPane.showMessageDialog(null,"Device Deleted!"); 
PRaddArchives();
}
    if(n == JOptionPane.NO_OPTION){ 
/*
jDateChooser1.setCalendar(null);
jTextField13.setText("");
*/
    }
    if(n == JOptionPane.CLOSED_OPTION){
/*
jDateChooser1.setCalendar(null);
jTextField3.setText("");
*/
    }
}
//End of Basic Deleting Functions------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Click Set Contents Function------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void pcSet(){
        DefaultTableModel model = (DefaultTableModel) compTbl.getModel();
        int selectedRowIndex = compTbl.getSelectedRow();
        compBran.setText(model.getValueAt(selectedRowIndex,0).toString());
        compDept.setText(model.getValueAt(selectedRowIndex,1).toString());
        compName.setText(model.getValueAt(selectedRowIndex,2).toString());
        compProc.setText(model.getValueAt(selectedRowIndex,3).toString());
        compRam.setText(model.getValueAt(selectedRowIndex,4).toString());
        compHdd.setText(model.getValueAt(selectedRowIndex,5).toString());
        showHisPC();
        setPCRem();
}
public void ccSet(){
        DefaultTableModel model = (DefaultTableModel) ccTbl.getModel();
        int selectedRowIndex = ccTbl.getSelectedRow();
        ccBran.setText(model.getValueAt(selectedRowIndex,0).toString());
        ccSupp.setText(model.getValueAt(selectedRowIndex,1).toString());
        ccNum.setText(model.getValueAt(selectedRowIndex,2).toString());
        ccUN.setText(model.getValueAt(selectedRowIndex,3).toString());
        ccPW.setText(model.getValueAt(selectedRowIndex,4).toString());
        showHisCC();
        setCCRem();
}
public void prSet(){
        DefaultTableModel model = (DefaultTableModel) prTbl.getModel();
        int selectedRowIndex = prTbl.getSelectedRow();
        prBran.setText(model.getValueAt(selectedRowIndex,0).toString());
        prManu.setText(model.getValueAt(selectedRowIndex,1).toString());
        prName.setText(model.getValueAt(selectedRowIndex,2).toString());
        prDept.setText(model.getValueAt(selectedRowIndex,3).toString());
        /*
        prRem.setText(model.getValueAt(selectedRowIndex,4).toString());
        */
        showHisPR();
        setPRRem();
}
public void hisSet(){
        DefaultTableModel model = (DefaultTableModel) allHisTbl.getModel();
        int selectedRowIndex = allHisTbl.getSelectedRow();
        String categ = model.getValueAt(selectedRowIndex,2).toString();
        SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
        System.out.print(categ);
        if(categ.equals("Computer")){
        HISdetails.setVisible(true);
        HISpc.setVisible(true);
        HIScc.setVisible(false);
        HISpr.setVisible(false);
        pcHisBran.setText(model.getValueAt(selectedRowIndex,0).toString());
        pcHisName.setText(model.getValueAt(selectedRowIndex,1).toString());
        pcHisAct.setText(model.getValueAt(selectedRowIndex,3).toString());
        pcHisPerf.setText(model.getValueAt(selectedRowIndex,4).toString());
        pcHisSDate.setText(model.getValueAt(selectedRowIndex,5).toString());
        pcHisEDate.setText(model.getValueAt(selectedRowIndex,6).toString());
        pcHisSTime.setText(model.getValueAt(selectedRowIndex,7).toString());
        pcHisETime.setText(model.getValueAt(selectedRowIndex,8).toString());
        pcHisPric.setText(model.getValueAt(selectedRowIndex,9).toString());
        pcHisRem.setText(model.getValueAt(selectedRowIndex,10).toString());
   
        }
        else if(categ.equals("CCTV")){
        HISdetails.setVisible(true);
        HISpc.setVisible(false);
        HIScc.setVisible(true);
        HISpr.setVisible(false);
        ccHisBran.setText(model.getValueAt(selectedRowIndex,0).toString());
        ccHisName.setText(model.getValueAt(selectedRowIndex,1).toString());
        ccHisAct.setText(model.getValueAt(selectedRowIndex,3).toString());
        ccHisPerf.setText(model.getValueAt(selectedRowIndex,4).toString());
        ccHisSDate.setText(model.getValueAt(selectedRowIndex,5).toString());
        ccHisEDate.setText(model.getValueAt(selectedRowIndex,6).toString());
        ccHisSTime.setText(model.getValueAt(selectedRowIndex,7).toString());
        ccHisETime.setText(model.getValueAt(selectedRowIndex,8).toString());
        ccHisPric.setText(model.getValueAt(selectedRowIndex,9).toString());
        ccHisRem.setText(model.getValueAt(selectedRowIndex,10).toString());
        }
        else if(categ.equals("Printer")){
        HISdetails.setVisible(true);
        HISpc.setVisible(false);
        HIScc.setVisible(false);
        HISpr.setVisible(true);
        prHisBran.setText(model.getValueAt(selectedRowIndex,0).toString());
        prHisName.setText(model.getValueAt(selectedRowIndex,1).toString());
        prHisAct.setText(model.getValueAt(selectedRowIndex,3).toString());
        prHisPerf.setText(model.getValueAt(selectedRowIndex,4).toString());
        prHisSDate.setText(model.getValueAt(selectedRowIndex,5).toString());
        prHisEDate.setText(model.getValueAt(selectedRowIndex,6).toString());
        prHisSTime.setText(model.getValueAt(selectedRowIndex,7).toString());
        prHisETime.setText(model.getValueAt(selectedRowIndex,8).toString());
        prHisPric.setText(model.getValueAt(selectedRowIndex,9).toString());
        prHisRem.setText(model.getValueAt(selectedRowIndex,10).toString());
        }
        
}
public void setPCRem(){
        DefaultTableModel model = (DefaultTableModel) compTbl.getModel();
        int selectedRowIndex = compTbl.getSelectedRow();
        String ID = model.getValueAt(selectedRowIndex,6).toString();
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT UPS, REM FROM dbo.invPC WHERE ID = '"+ID+"'";         
ResultSet rs=st.executeQuery(sql); 
if(rs.next()){
String UPS = rs.getString("UPS");
String Rem = rs.getString("REM");
compUps.setText(UPS);
compRem.setText(Rem);
      }
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
public void setCCRem(){
        DefaultTableModel model = (DefaultTableModel) compTbl.getModel();
        int selectedRowIndex = compTbl.getSelectedRow();
        String ID = model.getValueAt(selectedRowIndex,6).toString();
    try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT REM FROM dbo.invCC WHERE ID = '"+ID+"'";         
ResultSet rs=st.executeQuery(sql); 
if(rs.next()){
String Rem = rs.getString("REM");
ccRem.setText(Rem);
      }
   }
      
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
public void setPRRem(){
        DefaultTableModel model = (DefaultTableModel) compTbl.getModel();
        int selectedRowIndex = compTbl.getSelectedRow();
        String ID = model.getValueAt(selectedRowIndex,6).toString();
    try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT REM FROM dbo.invPR WHERE ID = '"+ID+"'";         
ResultSet rs=st.executeQuery(sql); 
if(rs.next()){
String Rem = rs.getString("REM");
prRem.setText(Rem);
      }
   }
      
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
//End of Contents Setting Function------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Choose Sort Function------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void pcSort(){
String Branch = pcSort.getSelectedItem().toString();    
if(Branch.equals("ALL")){
showPC();


}
else
{
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT BRANCH as Branch, DEPARTMENT as Department,OWNER as CurrentUser,PROCESSOR as Processor,RAM as Memory,HARDDISK as HardDisk, ID  FROM dbo.invPC WHERE BRANCH = '"+Branch+"' ORDER BY BRANCH ";         
rs=st.executeQuery(sql); 
TableColumnModel columnModel = compTbl.getColumnModel();
compTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
compTbl.setRowSelectionInterval(0,0);
}
public void ccSort(){
String Branch1 = ccSort.getSelectedItem().toString();    
if(Branch1.equals("ALL")){
showCC();
}
else
{
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, SP as ServiceProvider,CAM as Quantity,uN as Username,Pw as Password,ID  FROM dbo.invCC WHERE Branch = '"+Branch1+"'";   
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = ccTbl.getColumnModel();
ccTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
}
ccTbl.setRowSelectionInterval(0,0);
}
public void prSort(){
String Branch2 = prSort.getSelectedItem().toString();    
if(Branch2.equals("ALL")){
showPR(); 
}
else
{
   try {
con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");;         
Statement st=con.createStatement();         
sql = "SELECT Branch, Manufacturer,Printername as Name,Department, ID FROM dbo.invPR  WHERE Branch = '"+Branch2+"'";  
ResultSet rs=st.executeQuery(sql); 
TableColumnModel columnModel = prTbl.getColumnModel();
prTbl.setModel(DbUtils.resultSetToTableModel(rs));
rs.close();
st.close();
      }
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }  
}
prTbl.setRowSelectionInterval(0,0);
}
//End of Sort Function------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Data Archives Functions------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void PCaddArchives(){
    String s1 = compBran.getText();
String s2 = compDept.getText();
String s3 = compName.getText();
String s4 = compProc.getText();
String s5 = compRam.getText();
String s6 = compHdd.getText();
String s7 = compUps.getText();
String s8 = compRem.getText();
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");           
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
 String sql ="INSERT INTO dbo.pcArchives VALUES ('"+s1+"','"+s2+"','"+s3+"','"+s4+"','"+s5+"','"+s6+"','"+s7+"','"+s8+"','"+dt.format(date)+"','"+tm.format(time)+"')";         
st.execute(sql);

Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('AddArchives', 'Computer','"+s1+"-"+s2+"-"+s3+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
JOptionPane.showMessageDialog(null,"Sent to Archives"); 
refreshPC();
}
public void CCaddArchives(){
String s1 = ccBran.getText();
String s2 = ccSupp.getText();
String s3 = ccUN.getText();
String s4 = ccPW.getText();
String s5 = ccNum.getText();
/*
String s6 = ccRem.getText();
*/
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");           
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
 String sql ="INSERT INTO dbo.ccArchives VALUES ('"+s1+"','"+s2+"','"+s3+"','"+s4+"','"+s5+"','"+dt.format(date)+"','"+tm.format(time)+"')";         
st.execute(sql);

Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('AddArchives', 'CCTV','"+s1+"-"+s2+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
JOptionPane.showMessageDialog(null,"Sent to Archives"); 
refreshCC();    
}
public void PRaddArchives(){
String s1 = prBran.getText();
String s2 = prManu.getText();
String s3 = prName.getText();
String s4 = prDept.getText();
/*
String s5 = prRem.getText();
*/
try{
Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Newnemar", "sa", "123");           
        DateFormat dt = new SimpleDateFormat("MMM/dd/yy");
        Date date = new Date();
        DateFormat tm = new SimpleDateFormat("HH:mm:ss");
        Date time = new Date();
Statement st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);      
 String sql ="INSERT INTO dbo.prArchives VALUES ('"+s1+"','"+s2+"','"+s3+"','"+s4+"','"+dt.format(date)+"','"+tm.format(time)+"')";         
st.execute(sql);

Statement sta = con.createStatement();
            String newsql = "INSERT INTO dbo.Logs (Action,Categ,Item,Date,Time) VALUES ('AddArchives', 'Printer','"+s1+"-"+s4+"-"+s3+"','"+dt.format(date)+"','"+tm.format(time)+"')";
            sta.execute(newsql);
}
 catch (SQLException ex) {    
JOptionPane.showMessageDialog(null,"SQLException: " + ex.getMessage()); 
JOptionPane.showMessageDialog(null,"SQLState: " + ex.getSQLState()); 
 }
JOptionPane.showMessageDialog(null,"Sent to Archives"); 
refreshPR();    
}
//End of Data Archive Functions------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Setting Text Box Editable------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void pcEditable(){
compBran.setEditable(true);
compDept.setEditable(true);
compName.setEditable(true);
compProc.setEditable(true);
compRam.setEditable(true);
compHdd.setEditable(true);
compRem.setEditable(true);
compUps.setEditable(true);
pcUpdate.setVisible(true);
pcEdit.setVisible(false);
}
public void ccEditable(){
ccBran.setEditable(true);
ccSupp.setEditable(true);
ccUN.setEditable(true);
ccPW.setEditable(true);
ccNum.setEditable(true);
ccRem.setEditable(true);
ccUpdate.setVisible(true);
ccEdit.setVisible(false);
}
public void prEditable(){
prBran.setEditable(true);
prManu.setEditable(true);
prName.setEditable(true);
prDept.setEditable(true);
prRem.setEditable(true);
prUpdate.setVisible(true);
prEdit.setVisible(false);
}
public void pcHisEditable(){
pcHisBran.setEditable(true);
pcHisName.setEditable(true);
pcHisAct.setEditable(true);
pcHisSDate.setEnabled(true);
pcHisEDate.setEnabled(true);
pcHisSTime.setEditable(true);
pcHisETime.setEditable(true);
pcHisPric.setEditable(true);
pcHisRem.setEditable(true); 
}
public void ccHisEditable(){
ccHisBran.setEditable(true);
ccHisName.setEditable(true);
ccHisAct.setEditable(true);
ccHisSDate.setEnabled(true);
ccHisEDate.setEnabled(true);
ccHisSTime.setEditable(true);
ccHisETime.setEditable(true);
ccHisPric.setEditable(true);
ccHisRem.setEditable(true); 
}
public void prHisEditable(){
prHisBran.setEditable(true);
prHisName.setEditable(true);
prHisAct.setEditable(true);
prHisSDate.setEnabled(true);
prHisEDate.setEnabled(true);
prHisSTime.setEditable(true);
prHisETime.setEditable(true);
prHisPric.setEditable(true);
prHisRem.setEditable(true); 
}
//End of Text Box Editable Function------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//Setting Text Box Non-Editable------------------------------------------------------------------------------------------------------------------------------------------------------------------------
public void pcNonEditable(){
compBran.setEditable(false);
compDept.setEditable(false);
compName.setEditable(false);
compProc.setEditable(false);
compRam.setEditable(false);
compHdd.setEditable(false);
compRem.setEditable(false);
compUps.setEditable(false);  
pcUpdate.setVisible(false);
pcEdit.setVisible(true);
}
public void ccNonEditable(){
ccBran.setEditable(false);
ccSupp.setEditable(false);
ccUN.setEditable(false);
ccPW.setEditable(false);
ccNum.setEditable(false);
ccRem.setEditable(false); 
ccUpdate.setVisible(false);
ccEdit.setVisible(true);
}
public void prNonEditable(){
prBran.setEditable(false);
prManu.setEditable(false);
prName.setEditable(false);
prDept.setEditable(false);
prRem.setEditable(false);
prEdit.setVisible(true);
prUpdate.setVisible(false);
}
public void pcHisNonEditable(){
pcHisBran.setEditable(false);
pcHisName.setEditable(false);
pcHisAct.setEditable(false);
pcHisSDate.setEnabled(false);
pcHisEDate.setEnabled(false);
pcHisSTime.setEditable(false);
pcHisETime.setEditable(false);
pcHisPric.setEditable(false);
pcHisRem.setEditable(false); 
}
public void ccHisNonEditable(){
ccHisBran.setEditable(false);
ccHisName.setEditable(false);
ccHisAct.setEditable(false);
ccHisSDate.setEnabled(false);
ccHisEDate.setEnabled(false);
ccHisSTime.setEditable(false);
ccHisETime.setEditable(false);
ccHisPric.setEditable(false);
ccHisRem.setEditable(false); 
}
public void prHisNonEditable(){
prHisBran.setEditable(false);
prHisName.setEditable(false);
prHisAct.setEditable(false);
prHisSDate.setEnabled(false);
prHisEDate.setEnabled(false);
prHisSTime.setEditable(false);
prHisETime.setEditable(false);
prHisPric.setEditable(false);
prHisRem.setEditable(false); 
}
public void initEdit(){
pcNonEditable();
ccNonEditable();
prNonEditable();
}
//End of Text Box non-Editable function------------------------------------------------------------------------------------------------------------------------------------------------------------------------




    
    
    
//END-OF-FUNCTIONS---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
}

